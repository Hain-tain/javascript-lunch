(()=>{"use strict";var n={257:(n,t,e)=>{e.d(t,{Z:()=>s});var r=e(537),a=e.n(r),i=e(645),o=e.n(i)()(a());o.push([n.id,'* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n\n/* GNB ********************************************/\n.gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n\n/* 음식점 목록 *****************************************/\n\n/* 카테고리/정렬 필터 */\n.restaurant-filter-container {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n}\n\n.restaurant-filter {\n  padding: 8px;\n}\n\n/* 음식점 목록 */\n.restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  margin-right: 8px;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.restaurant__link {\n  color: var(--grey-400);\n\n  margin-bottom: 16px;\n}\n\n.restaurant__detail {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.restaurant__detail__category_and_favorite {\n  display: flex;\n  align-items: flex-start;\n}\n\n/* 음식점 추가 모달 *****************************************/\n.modal {\n  display: none;\n}\n\n.modal--open {\n  display: block;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.modal-container {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: "*";\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item input,\n.form-item textarea,\n.form-item select {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item textarea {\n  resize: none;\n}\n\n.form-item select {\n  height: 44px;\n\n  padding: 8px;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  color: var(--grey-300);\n}\n\ninput[name="name"],\ninput[name="link"] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n\n.button--favorites {\n  border: none;\n  background-color: inherit;\n\n  cursor: pointer;\n  margin-left: auto;\n}\n\n#tab-container > div {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n\n  margin: 32px 16px 16px;\n}\n\n.tab {\n  border: none;\n  border-bottom: solid 2px var(--grey-200);\n  color: var(--grey-300);\n  background-color: inherit;\n  width: 100%;\n\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 700;\n\n  padding-bottom: 10px;\n}\n\n.currentTab {\n  color: var(--primary-color);\n  border-bottom: solid 2px var(--primary-color);\n}\n',"",{version:3,sources:["webpack://./templates/style.css"],names:[],mappings:"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",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n\n/* GNB ********************************************/\n.gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n\n/* 음식점 목록 *****************************************/\n\n/* 카테고리/정렬 필터 */\n.restaurant-filter-container {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n}\n\n.restaurant-filter {\n  padding: 8px;\n}\n\n/* 음식점 목록 */\n.restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  margin-right: 8px;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.restaurant__link {\n  color: var(--grey-400);\n\n  margin-bottom: 16px;\n}\n\n.restaurant__detail {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.restaurant__detail__category_and_favorite {\n  display: flex;\n  align-items: flex-start;\n}\n\n/* 음식점 추가 모달 *****************************************/\n.modal {\n  display: none;\n}\n\n.modal--open {\n  display: block;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.modal-container {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: "*";\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item input,\n.form-item textarea,\n.form-item select {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item textarea {\n  resize: none;\n}\n\n.form-item select {\n  height: 44px;\n\n  padding: 8px;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  color: var(--grey-300);\n}\n\ninput[name="name"],\ninput[name="link"] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n\n.button--favorites {\n  border: none;\n  background-color: inherit;\n\n  cursor: pointer;\n  margin-left: auto;\n}\n\n#tab-container > div {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n\n  margin: 32px 16px 16px;\n}\n\n.tab {\n  border: none;\n  border-bottom: solid 2px var(--grey-200);\n  color: var(--grey-300);\n  background-color: inherit;\n  width: 100%;\n\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 700;\n\n  padding-bottom: 10px;\n}\n\n.currentTab {\n  color: var(--primary-color);\n  border-bottom: solid 2px var(--primary-color);\n}\n'],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),t.push(l))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},o=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var p=e(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=a(u,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function a(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,a){var i=r(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=e(i[o]);t[s].references--}for(var A=r(n,a),c=0;c<i.length;c++){var l=e(i[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=A}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,a&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var r=t.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0;var r={};(()=>{e.d(r,{Y:()=>it});var n=e(379),t=e.n(n),a=e(795),i=e.n(a),o=e(569),s=e.n(o),A=e(565),c=e.n(A),l=e(216),d=e.n(l),p=e(589),u=e.n(p),m=e(257),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=d(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals,e.p;const g=["이름순","거리순"],E=["한식","중식","일식","아시안","양식","기타"],h=["전체",...E],B=[5,10,15,20,30],b=n=>/^[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]+$/.test(n),C=n=>/^[a-zA-Z]+$/.test(n),x=(n,t)=>n===t?0:b(n)&&b(t)?n.localeCompare(t,"ko"):b(n)||b(t)?b(n)?-1:1:C(n)&&C(t)?((n,t)=>0!==n.localeCompare(t,"en",{sensitivity:"base"})?n.localeCompare(t,"en",{sensitivity:"base"}):-1*n.localeCompare(t,"en"))(n,t):C(n)||C(t)?C(n)?-1:1:[n,t].sort()[0]===n?-1:1;var v,y,w,k,_=function(n,t,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(n):r?r.value:t.get(n)};y=new WeakMap,w=new WeakMap,v=new WeakSet,k=function(n){const t=this.convertedRestaurants();return n===h[0]?t:t.filter((t=>t.category===n))};const T=class{constructor(n=[]){v.add(this),y.set(this,new Map),w.set(this,{이름순:(n,t)=>((n,t)=>{const e=[...n],r=[...t];for(let e=0;e<n.length;e++){const r=n[e],a=t[e];if(0!==x(r,a))return x(r,a)}return e.length===r.length?0:-1})(n.name,t.name),거리순:(n,t)=>n.distance-t.distance}),this.init(n)}init(n=[]){const t=n.map((n=>[n.name,n]));!function(n,t,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(n,e):a?a.value=e:t.set(n,e)}(this,y,new Map(t),"f")}add(n){return _(this,y,"f").set(n.name,n),this}delete(n){if(void 0===_(this,y,"f").get(n))throw new Error("[ERROR_IN_RestaurantList.ts] RestaurantList 상태(#restaurants)에 전달받은 name을 찾을 수 없습니다.(undefined)");_(this,y,"f").delete(n)}bringRestaurantInfo(n){if(void 0===_(this,y,"f").get(n))throw new Error("[ERROR] This is invalid restaurant name");return _(this,y,"f").get(n)}updateFavorites(n){const t=_(this,y,"f").get(n);if(!t)throw new Error("[ERROR] This is invalid restaurant name");const e=t.favorites,r={...t,favorites:!e};_(this,y,"f").set(n,r)}convertedRestaurants(){return Array.from(_(this,y,"f").values())}withFavorites(){return this.convertedRestaurants().filter((n=>!0===n.favorites))}getOrderedRestaurant({category:n,sortStandard:t}){const e=_(this,v,"m",k).call(this,n);return e.sort(_(this,w,"f")[t]),e}},j=(n,t)=>{const e=window.localStorage,r=JSON.stringify(t);e.setItem(n,r)},R=new T,L=R,S=()=>{j("allRestaurants",R.convertedRestaurants())},Y="새로운 음식점",M="카테고리",z="이름",H="거리(도보 이동 시간)",W="설명",I="메뉴 등 추가 정보를 입력해 주세요",O="참고 링크",F="매장 정보를 확인할 수있는 링크를 입력해 주세요.",N="취소하기",D="추가하기",Z=({tag:n,classes:t=[],contents:e="",attribute:r={}})=>{const a=document.createElement(n);return a.classList.add(...t),a.textContent=e,Object.keys(r).forEach((n=>{a.setAttribute(n,r[n])})),a};var P,q,X,$,U,J=function(n,t,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(n):r?r.value:t.get(n)};q=new WeakMap,P=new WeakSet,X=function(n){return Z({tag:"div",classes:n?["form-item","form-item--required"]:["form-item"]})},$=function(n,t){const e=document.createElement("label");return e.htmlFor=`${t} text-caption`,e.textContent=n,e},U=function(n){return Z({tag:"span",classes:["help-text","text-caption"],contents:n})};const G=class{constructor({subject:n,readableElement:t,isRequired:e=!1,description:r=""}){P.add(this),q.set(this,void 0),this.item=J(this,P,"m",X).call(this,e);const a=J(this,P,"m",$).call(this,n,t.id);(function(n,t,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");"a"===r?a.call(n,e):a?a.value=e:t.set(n,e)})(this,q,t,"f"),J(this,q,"f").required=e;const i=J(this,P,"m",U).call(this,r);this.item.append(a,J(this,q,"f"),i)}resetForm(){J(this,q,"f").value=""}},Q=({value:n,classes:t=[],onClickHandler:e=(()=>{})})=>{const r=Z({tag:"button",classes:t,contents:n});if(!(r instanceof HTMLButtonElement))throw new Error("[ERROR] Button is not HTMLButtonElement");return r.addEventListener("click",e),r},V=({value:n,onClickHandler:t})=>Q({value:n,classes:["button","button--primary","text-caption"],onClickHandler:t}),K=({value:n,onClickHandler:t})=>Q({value:n,classes:["button","button--secondary","text-caption"],onClickHandler:t}),nn=n=>n.map((n=>{const t=document.createElement("option");return t.innerText=n,t.value=n,t})),tn=({options:n,hasDefaultOption:t=!0,name:e=""})=>{const r=document.createElement("select");r.classList.add("select-box","restaurant-filter"),r.name=e;const a=nn(n);if(!t){const n=nn(["선택해주세요"])[0];n.selected=!0,n.disabled=!0,n.value="",r.append(n)}return r.append(...a),r};var en,rn,an,on,sn,An,cn,ln,dn,pn,un,mn,fn,gn,En=function(n,t,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(n):r?r.value:t.get(n)},hn=function(n,t,e,r,a){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!a)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?a.call(n,e):a?a.value=e:t.set(n,e),e};rn=new WeakMap,an=new WeakMap,on=new WeakMap,sn=new WeakMap,An=new WeakMap,en=new WeakSet,cn=function(){const n=tn({options:E,hasDefaultOption:!1,name:"category"});return new G({subject:M,readableElement:n,isRequired:!0})},ln=function(){const n=document.createElement("input");return n.type="text",n.name="name",n.id="name",n.required=!0,new G({subject:z,readableElement:n,isRequired:!0})},dn=function(){const n=B.map(String),t=tn({options:n,hasDefaultOption:!1,name:"distance"});return new G({subject:H,readableElement:t,isRequired:!0})},pn=function(){const n=document.createElement("textarea");return n.name="description",n.id="description",n.cols=30,n.rows=5,new G({subject:W,readableElement:n,description:I})},un=function(){const n=document.createElement("input");return n.type="text",n.name="link",n.id="link",new G({subject:O,readableElement:n,description:F})},mn=function({handleClickCancelButton:n,handleClickAddButton:t}){const e=Z({tag:"div",classes:["button-container"]}),r=En(this,en,"m",gn).call(this,t),a=En(this,en,"m",fn).call(this,n);return a.type="button",e.append(a,r),e},fn=function(n){return K({value:N,onClickHandler:n})},gn=function(n){return V({value:D,onClickHandler:n})};const Bn=class{constructor(n){this.element=(n=>{const t=Z({tag:"div",classes:["modal"]}),e=Z({tag:"div",classes:["modal-backdrop"]}),r=Z({tag:"div",classes:["modal-container"]});return r.append(...n),t.append(e,r),e.addEventListener("click",(()=>{t.classList.toggle("modal--open")})),t})(n)}toggle(){this.element.classList.toggle("modal--open")}},bn=()=>{const n=document.createElement("h2");return n.textContent=Y,n.classList.add("modal-title","text-title"),n},Cn=()=>(new class{constructor(){en.add(this),rn.set(this,void 0),an.set(this,void 0),on.set(this,void 0),sn.set(this,void 0),An.set(this,void 0),hn(this,rn,En(this,en,"m",cn).call(this),"f"),hn(this,an,En(this,en,"m",ln).call(this),"f"),hn(this,on,En(this,en,"m",dn).call(this),"f"),hn(this,sn,En(this,en,"m",pn).call(this),"f"),hn(this,An,En(this,en,"m",un).call(this),"f")}getForm({handleClickCancelButton:n,handleClickAddButton:t}){const e=document.createElement("form");return e.append(En(this,rn,"f").item,En(this,an,"f").item,En(this,on,"f").item,En(this,sn,"f").item,En(this,An,"f").item,En(this,en,"m",mn).call(this,{handleClickCancelButton:n,handleClickAddButton:t})),e}resetForms(){En(this,rn,"f").resetForm(),En(this,an,"f").resetForm(),En(this,on,"f").resetForm(),En(this,sn,"f").resetForm(),En(this,An,"f").resetForm()}}).getForm({handleClickCancelButton:n=>{n.target instanceof HTMLElement&&n.target.closest(".modal")?.classList.remove("modal--open")},handleClickAddButton:()=>{}}),xn="tab-",vn=e.p+"category-asian.png",yn=e.p+"category-chinese.png",wn=e.p+"category-etc.png",kn=e.p+"category-japanese.png",_n=e.p+"category-korean.png",Tn=e.p+"category-western.png",jn=e.p+"favorite-icon-filled.png",Rn=e.p+"favorite-icon-lined.png",Ln=n=>{const t=n.getAttribute("src");if(t){const e=t===jn?Rn:jn;n.setAttribute("src",e)}},Sn=({isFavorites:n,restaurantName:t,onClickHandler:e=(()=>{})})=>{const r=Q({value:"",classes:["button--favorites"],onClickHandler:n=>{(n=>{if(!(n.target instanceof HTMLElement))throw new Error("[ERROR_IN_handleFavorite] EventTarget is not HTMLElement");var t;Ln(n.target),t=n.target.getAttribute("restaurantName"),R.updateFavorites(t),S()})(n),e(n)}}),a=((n,t)=>Z({tag:"img",attribute:{src:n?jn:Rn,restaurantName:t}}))(n,t);return r.appendChild(a),r},Yn={한식:_n,중식:yn,일식:kn,아시안:vn,양식:Tn,기타:wn},Mn=n=>{const t=Z({tag:"div",classes:["restaurant__category"]}),e=Z({tag:"img",classes:["category-icon"]});return e.setAttribute("src",Yn[n]),e.setAttribute("alt",n),t.appendChild(e),t},zn=n=>Z({tag:"h3",classes:["restaurant__name","text-subtitle"],contents:n}),Hn=n=>Z({tag:"span",classes:["restaurant__distance","text-body"],contents:`캠퍼스로부터 ${n}분 내`}),Wn=(n="")=>Z({tag:"p",classes:["restaurant__description","text-body"],contents:n}),In=class extends Bn{constructor(n){super((n=>{const{category:t,name:e,distance:r,description:a,link:i,favorites:o}=n,s=Mn(t),A=zn(e),c=Hn(r),l=Wn(a),d=((n="")=>{const t=Z({tag:"div",classes:["restaurant__link","text-body"]}),e=Z({tag:"a",classes:["restaurant__link","text-body"],contents:n,attribute:{href:n,target:"_blank_"}});return t.append(e),t})(i),p=Sn({isFavorites:o,restaurantName:e,onClickHandler:()=>{const n=document.querySelector(".restaurant-list-container"),t="restaurant-all-list-container"===n?.getAttribute("id")?L:new T(L.withFavorites());it(n,t)}}),u=Z({tag:"div",classes:["restaurant__detail"],attribute:{name:e}}),m=Z({tag:"div",classes:["restaurant__detail__category_and_favorite"]});m.append(s,p),u.append(m,A,c,l,d);const f=Z({tag:"div",classes:["button-container"]}),g=K({value:"삭제하기",onClickHandler:n=>{if(n.target instanceof HTMLElement){const e=n.target.closest(".modal-container")?.firstChild;if(e instanceof HTMLElement){const n=e.getAttribute("name");if(!n)throw new Error("[ERROR] name is invalid");window.confirm("이 음식점을 정말 삭제하시겠습니까?")&&(t=n,R.delete(t),S());const r=document.querySelector(".restaurant-list-container"),a="restaurant-all-list-container"===r?.getAttribute("id")?L:new T(L.withFavorites());it(r,a)}n.target.closest(".modal")?.classList.remove("modal--open")}var t}}),E=V({value:"닫기",onClickHandler:n=>{n.target instanceof HTMLElement&&n.target.closest(".modal")?.classList.remove("modal--open")}});return f.append(g,E),[u,f]})(n))}};var On,Fn,Nn,Dn,Zn,Pn,qn=function(n,t,e,r){if("a"===e&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!r:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?r:"a"===e?r.call(n):r?r.value:t.get(n)};On=new WeakSet,Fn=function(){return{"모든 음식점":qn(this,On,"m",Nn).call(this),"자주 가는 음식점":qn(this,On,"m",Dn).call(this)}},Nn=function(){const n=Z({tag:"section",classes:["restaurant-filter-container"],attribute:{id:"filter-container"}}),t=Z({tag:"section",classes:["restaurant-list-container"],attribute:{id:"restaurant-all-list-container"}});return t.addEventListener("click",Xn),[n,t]},Dn=function(){const n=Z({tag:"section",classes:["restaurant-list-container"],attribute:{id:"restaurant-favorite-list-container"}});return n.addEventListener("click",Xn),[n]},Zn=function(){const n=this.tabElement.getAttribute("value"),t=this.tabElement.firstChild;qn(this,On,"m",Pn).call(this,n,t),this.tabElement.addEventListener("click",(n=>{if(!(n.currentTarget instanceof HTMLElement&&n.target instanceof HTMLElement))throw new Error("[ERROR_IN_styledCurrentTab] Invalid e.currentTarget Or e.target");const t=n.currentTarget.getAttribute("value");n.currentTarget.childNodes.forEach((n=>{qn(this,On,"m",Pn).call(this,t,n)}))}))},Pn=function(n,t){n!==t.id.slice(xn.length)?t.classList.remove("currentTab"):t.classList.add("currentTab")};const Xn=n=>{if(n.target instanceof HTMLElement&&!(n.target.parentElement instanceof HTMLButtonElement)){const t=n.target.closest("li")?.getAttribute("name");if(!t)throw new Error("[ERROR_IN_RestaurantListTab_onClickHandle]");const e=(n=>R.bringRestaurantInfo(n))(t),r=new In(e);document.getElementById("restaurant-detail-modal-container")?.replaceChildren(r.element),r.toggle()}},$n=({restaurantList:n,category:t,sortStandard:e})=>{const r=Z({tag:"ul",classes:["restaurant-list"]}),a=n.getOrderedRestaurant({category:t,sortStandard:e}).map((n=>(({category:n,name:t,distance:e,description:r,favorites:a,link:i})=>{const o=Z({tag:"li",classes:["restaurant"],attribute:{name:t}}),s=Mn(n),A=(({name:n,distance:t,description:e=""})=>{const r=Z({tag:"div",classes:["restaurant__info"]}),a=zn(n),i=Hn(t),o=Wn(e);return r.append(a,i,o),r})({name:t,distance:e,description:r}),c=Sn({isFavorites:a,restaurantName:t});return o.append(s,A,c),o})(n)));return r.append(...a),r},Un=((n,t)=>{const e=window.localStorage;return null===e.getItem(n)&&j(n,[{category:"한식",name:"맛있는콩나무",distance:15,description:"신선한 재료로 만드는 전통 한식 요리",link:"https://www.woowacourse.io/",favorites:!0},{category:"중식",name:"홍콩반점",distance:20,description:"정통 홍콩 스타일의 중국 요리",link:"https://www.woowacourse.io/",favorites:!1},{category:"일식",name:"도쿄라면",distance:30,description:"도쿄에서 온 정통 일본 라면 전문점",link:"https://www.woowacourse.io/",favorites:!1},{category:"양식",name:"프렌치빌",distance:10,description:"프랑스의 맛을 품은 양식 레스토랑",link:"https://www.woowacourse.io/",favorites:!1},{category:"아시안",name:"방콕맛집",distance:5,description:"방콕에서 온 아시안 요리 전문점",link:"https://www.woowacourse.io/",favorites:!1},{category:"기타",name:"스페인타파스",distance:15,description:"스페인 풍미를 느낄 수 있는 다양한 타파스",link:"https://www.woowacourse.io/",favorites:!1}]),JSON.parse(e.getItem(n))})("allRestaurants");L.init(Un??[]);const Jn=document.getElementById("add-restaurant-button"),Gn=document.getElementById("adding-restaurant-modal-container"),Qn=new class extends Bn{constructor(){super([bn(),Cn()])}};Gn.append(Qn.element);const Vn=document.getElementById("tab-container"),Kn=(new class{constructor(){On.add(this),this.tabElement=(({tabMenu:n,contentsArea:t})=>{const e=Object.keys(n),r=Z({tag:"div",attribute:{value:e[0],id:"tab"}}),a=e.map((n=>Z({tag:"button",classes:["tab"],contents:n,attribute:{id:`${xn}${n}`}})));return r.append(...a),t.append(...n[e[0]]),r.addEventListener("click",(e=>{if(e.target instanceof HTMLElement){const a=e.target.id.slice(xn.length);t.replaceChildren(...n[a]),r.setAttribute("value",a)}})),r})({tabMenu:qn(this,On,"m",Fn).call(this),contentsArea:document.getElementById("restaurants-container")}),qn(this,On,"m",Zn).call(this)}}).tabElement;Vn.appendChild(Kn);const nt=document.getElementById("filter-container"),tt=tn({options:h,name:"category"}),et=tn({options:g,name:"sorting"});nt.append(tt,et);const rt=document.getElementById("restaurant-all-list-container"),at=$n({restaurantList:L,category:h[0],sortStandard:g[0]});rt.append(at),Jn.addEventListener("click",(()=>{Qn.toggle()})),Kn.addEventListener("click",(()=>{if("모든 음식점"===Kn.getAttribute("value")&&it(rt,L),"자주 가는 음식점"===Kn.getAttribute("value")){const n=document.getElementById("restaurant-favorite-list-container");if(n){const t=$n({restaurantList:new T(L.withFavorites()),category:h[0],sortStandard:g[0]});n.replaceChildren(t)}}})),nt.addEventListener("change",(()=>{it(rt,L)})),Gn.addEventListener("submit",(n=>{n.preventDefault();const t=n.target.name.value,e=n.target.category.value,r=n.target.distance.value,a=n.target.description.value,i=n.target.link.value;var o;Qn.toggle(),o={name:t,category:e,distance:r,description:a,link:i,favorites:!1},R.add(o),S(),it(rt,L)}));const it=(n,t)=>{const e=$n({restaurantList:t,category:tt.value,sortStandard:et.value});n.replaceChildren(e)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFMxQi9Ea0J6RyxFMEJnRVosQ0FDWFMsT0FDQWIsV0FDQWMsV0FDQTBDLGNBQ0FpRixPQUNBbEgsV0FSYyxHMUI3RGxCWSxFQUFrQjdCLElBQUlGLEdBQ3RCZ0MsSTBCc0VBaUgsR0FBd0JnRCxHQUE0QixFQUFrQixJQUVuRSxNQUFNaEQsR0FBMEIsQ0FBQ2MsRUFBeUJmLEtBQzdELE1BQU1vRCxFQUFlLEdBQXVCLENBQ3hDcEQsZUFBZ0JBLEVBQ2hCcEosU0FBVW1NLEdBQWtCdE0sTUFDNUJpQyxhQUFjc0ssR0FBc0J2TSxRQUV4Q3NLLEVBQXdCYSxnQkFBZ0J3QixFQUFhLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3RlbXBsYXRlcy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3RlbXBsYXRlcy9zdHlsZS5jc3M/MmFmZiIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9pbWFnZS9hZGQtYnV0dG9uLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb25zdGFudHMvc2VsZWN0T3B0aW9ucy50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy91dGlscy9zb3J0TGV0dGVycy50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9kb21haW4vUmVzdGF1cmFudExpc3QudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdXRpbHMvc2V0TG9jYWxTdG9yYWdlSXRlbS50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9kb21haW4vQWxsUmVzdGF1cmFudExpc3QudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29uc3RhbnRzL2Zvcm1JdGVtVGV4dHMudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy91dGlscy9jcmVhdGVFbGVtZW50QnlUYWcudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy9jb21wb25lbnRzL0Zvcm0vRm9ybUl0ZW0udHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy9jb21wb25lbnRzL0J1dHRvbi9nZW5lcmF0ZUJ1dHRvbi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92aWV3L2NvbXBvbmVudHMvQnV0dG9uL2dlbmVyYXRlUHJpbWFyeUJ1dHRvbi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92aWV3L2NvbXBvbmVudHMvQnV0dG9uL2dlbmVyYXRlU2Vjb25kYXJ5QnV0dG9uLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3ZpZXcvY29tcG9uZW50cy9SZWFkYWJsZUVsZW1lbnQvZ2VuZXJhdGVTZWxlY3RCb3gudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy9jb21wb25lbnRzL0Zvcm0vQWRkUmVzdGF1cmFudEZvcm0udHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy9jb21wb25lbnRzL01vZGFsL01vZGFsLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3ZpZXcvY29tcG9uZW50cy9Nb2RhbC9nZW5lcmF0ZU1vZGFsLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3ZpZXcvY29tcG9uZW50cy9Nb2RhbC9BZGRpbmdSZXN0YXVyYW50TW9kYWwudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy9jb21wb25lbnRzL1RhYi9nZW5lcmF0ZVRhYi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3RlbXBsYXRlcy9jYXRlZ29yeS1hc2lhbi5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi90ZW1wbGF0ZXMvY2F0ZWdvcnktY2hpbmVzZS5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi90ZW1wbGF0ZXMvY2F0ZWdvcnktZXRjLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3RlbXBsYXRlcy9jYXRlZ29yeS1qYXBhbmVzZS5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi90ZW1wbGF0ZXMvY2F0ZWdvcnkta29yZWFuLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3RlbXBsYXRlcy9jYXRlZ29yeS13ZXN0ZXJuLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3RlbXBsYXRlcy9mYXZvcml0ZS1pY29uLWZpbGxlZC5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi90ZW1wbGF0ZXMvZmF2b3JpdGUtaWNvbi1saW5lZC5wbmciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy9jb21wb25lbnRzL0J1dHRvbi9nZW5lcmF0ZUZhdm9yaXRlc0J1dHRvbi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92aWV3L2NvbXBvbmVudHMvZ2VuZXJhdGVSZXN0YXVyYW50SXRlbS50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92aWV3L2NvbXBvbmVudHMvTW9kYWwvUmVzdGF1cmFudERldGFpbE1vZGFsLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3ZpZXcvY29tcG9uZW50cy9UYWIvUmVzdGF1cmFudExpc3RUYWIudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdmlldy9jb21wb25lbnRzL2dlbmVyYXRlUmVzdGF1cmFudExpc3QudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdXRpbHMvZ2V0TG9jYWxTdG9yYWdlSXRlbS50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9kYXRhL3Jlc3RhdXJhbnREYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBwYWRkaW5nOiAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxudWwsXFxubGkge1xcbiAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxuaHRtbCxcXG5ib2R5IHtcXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG4vKiBDb2xvcnMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuOnJvb3Qge1xcbiAgLS1wcmltYXJ5LWNvbG9yOiAjZWM0YTBhO1xcbiAgLS1saWdodGVuLWNvbG9yOiAjZjZhODhhO1xcbiAgLS1ncmV5LTEwMDogI2ZmZmZmZjtcXG4gIC0tZ3JleS0yMDA6ICNkMGQ1ZGQ7XFxuICAtLWdyZXktMzAwOiAjNjY3MDg1O1xcbiAgLS1ncmV5LTQwMDogIzM0NDA1NDtcXG4gIC0tZ3JleS01MDA6ICMwMDAwMDA7XFxufVxcblxcbi8qIFR5cG9ncmFwaHkgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4udGV4dC10aXRsZSB7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICBsaW5lLWhlaWdodDogMjRweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi50ZXh0LXN1YnRpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLnRleHQtYm9keSB7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICBsaW5lLWhlaWdodDogMjRweDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxufVxcblxcbi50ZXh0LWNhcHRpb24ge1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbn1cXG5cXG4vKiBHTkIgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLmduYiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogNjRweDtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG5cXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cXG4uZ25iX190aXRsZSB7XFxuICBjb2xvcjogI2ZjZmNmZDtcXG59XFxuXFxuLmduYl9fYnV0dG9uIHtcXG4gIGhlaWdodDogNDBweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcblxcbiAgZm9udC1zaXplOiAyNHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZ25iX19idXR0b24gaW1nIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBvYmplY3QtZml0OiBjb250YWluO1xcbn1cXG5cXG4vKiDsnYzsi53soJAg66qp66GdICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcblxcbi8qIOy5tO2FjOqzoOumrC/soJXroKwg7ZWE7YSwICovXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luLXRvcDogMjRweDtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciBzZWxlY3Qge1xcbiAgaGVpZ2h0OiA0NHB4O1xcbiAgbWluLXdpZHRoOiAxMjVweDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkMGQ1ZGQ7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLnJlc3RhdXJhbnQtZmlsdGVyIHtcXG4gIHBhZGRpbmc6IDhweDtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOuqqeuhnSAqL1xcbi5yZXN0YXVyYW50LWxpc3QtY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbiAgcGFkZGluZzogMCAxNnB4O1xcbiAgbWFyZ2luOiAxNnB4IDA7XFxufVxcblxcbi5yZXN0YXVyYW50IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG5cXG4gIHBhZGRpbmc6IDE2cHggOHB4O1xcblxcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOWVhZWQ7XFxufVxcblxcbi5yZXN0YXVyYW50X19jYXRlZ29yeSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDY0cHg7XFxuICBoZWlnaHQ6IDY0cHg7XFxuICBtaW4td2lkdGg6IDY0cHg7XFxuICBtaW4taGVpZ2h0OiA2NHB4O1xcblxcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tbGlnaHRlbi1jb2xvcik7XFxufVxcblxcbi5jYXRlZ29yeS1pY29uIHtcXG4gIHdpZHRoOiAzNnB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9faW5mbyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG5cXG4gIG1hcmdpbi1yaWdodDogOHB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fbmFtZSB7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbi5yZXN0YXVyYW50X19kaXN0YW5jZSB7XFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblxcbi5yZXN0YXVyYW50X19kZXNjcmlwdGlvbiB7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG5cXG4gIHBhZGRpbmctdG9wOiA4cHg7XFxuXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XFxuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fbGluayB7XFxuICBjb2xvcjogdmFyKC0tZ3JleS00MDApO1xcblxcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2RldGFpbCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMTBweDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2RldGFpbF9fY2F0ZWdvcnlfYW5kX2Zhdm9yaXRlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOy2lOqwgCDrqqjri6wgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLm1vZGFsIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5tb2RhbC0tb3BlbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLm1vZGFsLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblxcbi5tb2RhbC1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBwYWRkaW5nOiAzMnB4IDE2cHg7XFxuXFxuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDBweCAwcHg7XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1ncmV5LTEwMCk7XFxufVxcblxcbi5tb2RhbC10aXRsZSB7XFxuICBtYXJnaW4tYm90dG9tOiAzNnB4O1xcbn1cXG5cXG4uZm9ybS1pdGVtIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXG59XFxuXFxuLmZvcm0taXRlbSBsYWJlbCB7XFxuICBjb2xvcjogdmFyKC0tZ3JleS00MDApO1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbn1cXG5cXG4uZm9ybS1pdGVtLS1yZXF1aXJlZCBsYWJlbDo6YWZ0ZXIge1xcbiAgcGFkZGluZy1sZWZ0OiA0cHg7XFxuXFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuICBjb250ZW50OiBcXFwiKlxcXCI7XFxufVxcblxcbi5mb3JtLWl0ZW0gLmhlbHAtdGV4dCB7XFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG4uZm9ybS1pdGVtIGlucHV0LFxcbi5mb3JtLWl0ZW0gdGV4dGFyZWEsXFxuLmZvcm0taXRlbSBzZWxlY3Qge1xcbiAgcGFkZGluZzogOHB4O1xcbiAgbWFyZ2luOiA2cHggMDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdyZXktMjAwKTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLmZvcm0taXRlbSB0ZXh0YXJlYSB7XFxuICByZXNpemU6IG5vbmU7XFxufVxcblxcbi5mb3JtLWl0ZW0gc2VsZWN0IHtcXG4gIGhlaWdodDogNDRweDtcXG5cXG4gIHBhZGRpbmc6IDhweDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdyZXktMjAwKTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxufVxcblxcbmlucHV0W25hbWU9XFxcIm5hbWVcXFwiXSxcXG5pbnB1dFtuYW1lPVxcXCJsaW5rXFxcIl0ge1xcbiAgaGVpZ2h0OiA0NHB4O1xcbn1cXG5cXG4uYnV0dG9uLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4uYnV0dG9uIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiA0NHB4O1xcblxcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xcblxcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcblxcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmJ1dHRvbjpsYXN0LWNoaWxkIHtcXG4gIG1hcmdpbi1yaWdodDogMDtcXG59XFxuXFxuLmJ1dHRvbi0tc2Vjb25kYXJ5IHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdyZXktMzAwKTtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcblxcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuLmJ1dHRvbi0tcHJpbWFyeSB7XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG5cXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTEwMCk7XFxufVxcblxcbi5idXR0b24tLWZhdm9yaXRlcyB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xcblxcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XFxufVxcblxcbiN0YWItY29udGFpbmVyID4gZGl2IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcblxcbiAgbWFyZ2luOiAzMnB4IDE2cHggMTZweDtcXG59XFxuXFxuLnRhYiB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItYm90dG9tOiBzb2xpZCAycHggdmFyKC0tZ3JleS0yMDApO1xcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XFxuICB3aWR0aDogMTAwJTtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG5cXG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbn1cXG5cXG4uY3VycmVudFRhYiB7XFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuICBib3JkZXItYm90dG9tOiBzb2xpZCAycHggdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3RlbXBsYXRlcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VB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QzNCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTs7O0VBR0UsWUFBWTtFQUNaLGFBQWE7O0VBRWIsaUNBQWlDO0VBQ2pDLGtCQUFrQjs7RUFFbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7O0VBRVosWUFBWTs7RUFFWixpQ0FBaUM7RUFDakMsa0JBQWtCOztFQUVsQixzQkFBc0I7QUFDeEI7O0FBRUE7O0VBRUUsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7O0VBRVosa0JBQWtCOztFQUVsQixZQUFZO0VBQ1osa0JBQWtCOztFQUVsQixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsdUJBQXVCOztFQUV2QixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxnQ0FBZ0M7O0VBRWhDLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFlBQVk7RUFDWix5QkFBeUI7O0VBRXpCLGVBQWU7RUFDZixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDZCQUE2QjtFQUM3QixtQkFBbUI7O0VBRW5CLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFlBQVk7RUFDWix3Q0FBd0M7RUFDeEMsc0JBQXNCO0VBQ3RCLHlCQUF5QjtFQUN6QixXQUFXOztFQUVYLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCOztFQUVoQixvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsNkNBQTZDO0FBQy9DXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbnVsLFxcbmxpIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbmh0bWwsXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLyogQ29sb3JzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbjpyb290IHtcXG4gIC0tcHJpbWFyeS1jb2xvcjogI2VjNGEwYTtcXG4gIC0tbGlnaHRlbi1jb2xvcjogI2Y2YTg4YTtcXG4gIC0tZ3JleS0xMDA6ICNmZmZmZmY7XFxuICAtLWdyZXktMjAwOiAjZDBkNWRkO1xcbiAgLS1ncmV5LTMwMDogIzY2NzA4NTtcXG4gIC0tZ3JleS00MDA6ICMzNDQwNTQ7XFxuICAtLWdyZXktNTAwOiAjMDAwMDAwO1xcbn1cXG5cXG4vKiBUeXBvZ3JhcGh5ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLnRleHQtdGl0bGUge1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4udGV4dC1zdWJ0aXRsZSB7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBsaW5lLWhlaWdodDogMjhweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi50ZXh0LWJvZHkge1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbn1cXG5cXG4udGV4dC1jYXB0aW9uIHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXFxuLyogR05CICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi5nbmIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDY0cHg7XFxuXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxuXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG59XFxuXFxuLmduYl9fdGl0bGUge1xcbiAgY29sb3I6ICNmY2ZjZmQ7XFxufVxcblxcbi5nbmJfX2J1dHRvbiB7XFxuICBoZWlnaHQ6IDQwcHg7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmduYl9fYnV0dG9uIGltZyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOuqqeuhnSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG5cXG4vKiDsubTthYzqs6Drpqwv7KCV66CsIO2VhO2EsCAqL1xcbi5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG4gIG1hcmdpbi10b3A6IDI0cHg7XFxufVxcblxcbi5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXIgc2VsZWN0IHtcXG4gIGhlaWdodDogNDRweDtcXG4gIG1pbi13aWR0aDogMTI1cHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCAjZDBkNWRkO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5yZXN0YXVyYW50LWZpbHRlciB7XFxuICBwYWRkaW5nOiA4cHg7XFxufVxcblxcbi8qIOydjOyLneygkCDrqqnroZ0gKi9cXG4ucmVzdGF1cmFudC1saXN0LWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG4gIG1hcmdpbjogMTZweCAwO1xcbn1cXG5cXG4ucmVzdGF1cmFudCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuXFxuICBwYWRkaW5nOiAxNnB4IDhweDtcXG5cXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTllYWVkO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fY2F0ZWdvcnkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA2NHB4O1xcbiAgaGVpZ2h0OiA2NHB4O1xcbiAgbWluLXdpZHRoOiA2NHB4O1xcbiAgbWluLWhlaWdodDogNjRweDtcXG5cXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG5cXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWxpZ2h0ZW4tY29sb3IpO1xcbn1cXG5cXG4uY2F0ZWdvcnktaWNvbiB7XFxuICB3aWR0aDogMzZweDtcXG4gIGhlaWdodDogMzZweDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2luZm8ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuXFxuICBtYXJnaW4tcmlnaHQ6IDhweDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX25hbWUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGlzdGFuY2Uge1xcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGVzY3JpcHRpb24ge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcblxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2xpbmsge1xcbiAgY29sb3I6IHZhcigtLWdyZXktNDAwKTtcXG5cXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XFxufVxcblxcbi5yZXN0YXVyYW50X19kZXRhaWwge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDEwcHg7XFxufVxcblxcbi5yZXN0YXVyYW50X19kZXRhaWxfX2NhdGVnb3J5X2FuZF9mYXZvcml0ZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxufVxcblxcbi8qIOydjOyLneygkCDstpTqsIAg66qo64usICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi5tb2RhbCB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4ubW9kYWwtLW9wZW4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5tb2RhbC1iYWNrZHJvcCB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDA7XFxuICByaWdodDogMDtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxuXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMzUpO1xcbn1cXG5cXG4ubW9kYWwtY29udGFpbmVyIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIGJvdHRvbTogMDtcXG4gIHdpZHRoOiAxMDAlO1xcblxcbiAgcGFkZGluZzogMzJweCAxNnB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4ubW9kYWwtdGl0bGUge1xcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXG59XFxuXFxuLmZvcm0taXRlbSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gbGFiZWwge1xcbiAgY29sb3I6IHZhcigtLWdyZXktNDAwKTtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLmZvcm0taXRlbS0tcmVxdWlyZWQgbGFiZWw6OmFmdGVyIHtcXG4gIHBhZGRpbmctbGVmdDogNHB4O1xcblxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgY29udGVudDogXFxcIipcXFwiO1xcbn1cXG5cXG4uZm9ybS1pdGVtIC5oZWxwLXRleHQge1xcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuLmZvcm0taXRlbSBpbnB1dCxcXG4uZm9ybS1pdGVtIHRleHRhcmVhLFxcbi5mb3JtLWl0ZW0gc2VsZWN0IHtcXG4gIHBhZGRpbmc6IDhweDtcXG4gIG1hcmdpbjogNnB4IDA7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gdGV4dGFyZWEge1xcbiAgcmVzaXplOiBub25lO1xcbn1cXG5cXG4uZm9ybS1pdGVtIHNlbGVjdCB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuXFxuICBwYWRkaW5nOiA4cHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG5pbnB1dFtuYW1lPVxcXCJuYW1lXFxcIl0sXFxuaW5wdXRbbmFtZT1cXFwibGlua1xcXCJdIHtcXG4gIGhlaWdodDogNDRweDtcXG59XFxuXFxuLmJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDRweDtcXG5cXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5idXR0b246bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcblxcbi5idXR0b24tLXNlY29uZGFyeSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTMwMCk7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxufVxcblxcbi5idXR0b24tLXByaW1hcnkge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4uYnV0dG9uLS1mYXZvcml0ZXMge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcXG5cXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xcbn1cXG5cXG4jdGFiLWNvbnRhaW5lciA+IGRpdiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG5cXG4gIG1hcmdpbjogMzJweCAxNnB4IDE2cHg7XFxufVxcblxcbi50YWIge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgMnB4IHZhcigtLWdyZXktMjAwKTtcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xcbiAgd2lkdGg6IDEwMCU7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxuICBsaW5lLWhlaWdodDogMjRweDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuXFxuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLmN1cnJlbnRUYWIge1xcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgMnB4IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFkZC1idXR0b24ucG5nXCI7IiwiZXhwb3J0IGNvbnN0IFNPUlRfU1RBTkRBUkQgPSBbXCLsnbTrpoTsiJxcIiwgXCLqsbDrpqzsiJxcIl07XG5leHBvcnQgY29uc3QgQ0FURUdPUlkgPSBbXG4gICAgXCLtlZzsi51cIixcbiAgICBcIuykkeyLnVwiLFxuICAgIFwi7J287IudXCIsXG4gICAgXCLslYTsi5zslYhcIixcbiAgICBcIuyWkeyLnVwiLFxuICAgIFwi6riw7YOAXCIsXG5dO1xuZXhwb3J0IGNvbnN0IENBVEVHT1JZX1dJVEhfRU5USVJFID0gW1wi7KCE7LK0XCIsIC4uLkNBVEVHT1JZXTtcbmV4cG9ydCBjb25zdCBESVNUQU5DRSA9IFs1LCAxMCwgMTUsIDIwLCAzMF07XG5leHBvcnQgY29uc3QgREVGQVVMVF9VTlNFTEVDVEVEX09QVElPTiA9IFwi7ISg7YOd7ZW07KO87IS47JqUXCI7XG5leHBvcnQgY29uc3QgaXNDYXRlZ29yeSA9ICh2YWx1ZSkgPT4ge1xuICAgIHJldHVybiBDQVRFR09SWS5pbmNsdWRlcyh2YWx1ZSk7XG59O1xuZXhwb3J0IGNvbnN0IGlzRGlzdGFuY2UgPSAodmFsdWUpID0+IHtcbiAgICByZXR1cm4gRElTVEFOQ0UuaW5jbHVkZXModmFsdWUpO1xufTtcbiIsImNvbnN0IGlzS29yZWFuID0gKGxldHRlcikgPT4ge1xuICAgIGNvbnN0IGtvcmVhblBhdHRlcm4gPSAvXlvjhLEt44WOfOOFjy3jhaN86rCALe2eo10rJC87XG4gICAgcmV0dXJuIGtvcmVhblBhdHRlcm4udGVzdChsZXR0ZXIpO1xufTtcbmNvbnN0IGlzRW5nbGlzaCA9IChsZXR0ZXIpID0+IHtcbiAgICBjb25zdCBlbmdsaXNoUGF0dGVybiA9IC9eW2EtekEtWl0rJC87XG4gICAgcmV0dXJuIGVuZ2xpc2hQYXR0ZXJuLnRlc3QobGV0dGVyKTtcbn07XG5jb25zdCBjb21wYXJlRW5nbGlzaCA9IChhLCBiKSA9PiB7XG4gICAgaWYgKGEubG9jYWxlQ29tcGFyZShiLCBcImVuXCIsIHsgc2Vuc2l0aXZpdHk6IFwiYmFzZVwiIH0pICE9PSAwKSB7XG4gICAgICAgIHJldHVybiBhLmxvY2FsZUNvbXBhcmUoYiwgXCJlblwiLCB7IHNlbnNpdGl2aXR5OiBcImJhc2VcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIC0xICogYS5sb2NhbGVDb21wYXJlKGIsIFwiZW5cIik7XG59O1xuLy8g66y47J6Q7Je07J2EIOu5hOq1kO2VmOyXrCAtMSwgMCwgMeydhCDrsJjtmZjtlZjripQg7ZWo7IiYXG4vLyDsoJXroKwg6riw7KSAOiDsmKTrpoTssKjsiJwsIO2VnOq4gCA+IOyYgeyWtCA+IOq4sO2DgCDrrLjsnpBcbi8vIOyYgeyWtOuKlCDrjIDshozrrLjsnpAg7JeG7J20IOq1rOu2hO2VmOuQmCwg6rCZ7J2EIOqyveyasCDrjIDrrLjsnpDrpbwg7Jqw7ISg7Iic7JyE66GcIOuRlOuLpC5cbmNvbnN0IGNvbXBhcmVMZXR0ZXJQcmlvcml0eSA9IChhLCBiKSA9PiB7XG4gICAgaWYgKGEgPT09IGIpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGlmIChpc0tvcmVhbihhKSAmJiBpc0tvcmVhbihiKSkge1xuICAgICAgICByZXR1cm4gYS5sb2NhbGVDb21wYXJlKGIsIFwia29cIik7XG4gICAgfVxuICAgIGlmIChpc0tvcmVhbihhKSB8fCBpc0tvcmVhbihiKSkge1xuICAgICAgICByZXR1cm4gaXNLb3JlYW4oYSkgPyAtMSA6IDE7XG4gICAgfVxuICAgIGlmIChpc0VuZ2xpc2goYSkgJiYgaXNFbmdsaXNoKGIpKSB7XG4gICAgICAgIHJldHVybiBjb21wYXJlRW5nbGlzaChhLCBiKTtcbiAgICB9XG4gICAgaWYgKGlzRW5nbGlzaChhKSB8fCBpc0VuZ2xpc2goYikpIHtcbiAgICAgICAgcmV0dXJuIGlzRW5nbGlzaChhKSA/IC0xIDogMTtcbiAgICB9XG4gICAgcmV0dXJuIFthLCBiXS5zb3J0KClbMF0gPT09IGEgPyAtMSA6IDE7XG59O1xuY29uc3Qgc29ydExldHRlcnMgPSAoYSwgYikgPT4ge1xuICAgIGNvbnN0IGFMZXR0ZXJzID0gWy4uLmFdO1xuICAgIGNvbnN0IGJMZXR0ZXJzID0gWy4uLmJdO1xuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBhLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBjb25zdCBhTGV0dGVyID0gYVtpbmRleF07XG4gICAgICAgIGNvbnN0IGJMZXR0ZXIgPSBiW2luZGV4XTtcbiAgICAgICAgaWYgKGNvbXBhcmVMZXR0ZXJQcmlvcml0eShhTGV0dGVyLCBiTGV0dGVyKSAhPT0gMClcbiAgICAgICAgICAgIHJldHVybiBjb21wYXJlTGV0dGVyUHJpb3JpdHkoYUxldHRlciwgYkxldHRlcik7XG4gICAgfVxuICAgIGlmIChhTGV0dGVycy5sZW5ndGggPT09IGJMZXR0ZXJzLmxlbmd0aClcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgcmV0dXJuIC0xO1xufTtcbmV4cG9ydCBkZWZhdWx0IHNvcnRMZXR0ZXJzO1xuIiwidmFyIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRTZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIHZhbHVlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwibVwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBtZXRob2QgaXMgbm90IHdyaXRhYmxlXCIpO1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiAoa2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIsIHZhbHVlKSA6IGYgPyBmLnZhbHVlID0gdmFsdWUgOiBzdGF0ZS5zZXQocmVjZWl2ZXIsIHZhbHVlKSksIHZhbHVlO1xufTtcbnZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59O1xudmFyIF9SZXN0YXVyYW50TGlzdF9pbnN0YW5jZXMsIF9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cywgX1Jlc3RhdXJhbnRMaXN0X3NvcnRDYWxsYmFjaywgX1Jlc3RhdXJhbnRMaXN0X2ZpbHRlckJ5Q2F0ZWdvcnk7XG5pbXBvcnQgeyBDQVRFR09SWV9XSVRIX0VOVElSRSB9IGZyb20gXCIuLi9jb25zdGFudHMvc2VsZWN0T3B0aW9uc1wiO1xuaW1wb3J0IHNvcnRMZXR0ZXJzIGZyb20gXCIuLi91dGlscy9zb3J0TGV0dGVyc1wiO1xuY2xhc3MgUmVzdGF1cmFudExpc3Qge1xuICAgIGNvbnN0cnVjdG9yKHJlc3RhdXJhbnRzID0gW10pIHtcbiAgICAgICAgX1Jlc3RhdXJhbnRMaXN0X2luc3RhbmNlcy5hZGQodGhpcyk7XG4gICAgICAgIF9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cy5zZXQodGhpcywgbmV3IE1hcCgpKTtcbiAgICAgICAgX1Jlc3RhdXJhbnRMaXN0X3NvcnRDYWxsYmFjay5zZXQodGhpcywge1xuICAgICAgICAgICAg7J2066aE7IicOiAoYSwgYikgPT4gc29ydExldHRlcnMoYS5uYW1lLCBiLm5hbWUpLFxuICAgICAgICAgICAg6rGw66as7IicOiAoYSwgYikgPT4gYS5kaXN0YW5jZSAtIGIuZGlzdGFuY2UsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmluaXQocmVzdGF1cmFudHMpO1xuICAgIH1cbiAgICBpbml0KHJlc3RhdXJhbnRzID0gW10pIHtcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudEVudHJpZXMgPSByZXN0YXVyYW50cy5tYXAoKHJlc3RhdXJhbnQpID0+IFtyZXN0YXVyYW50Lm5hbWUsIHJlc3RhdXJhbnRdKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfUmVzdGF1cmFudExpc3RfcmVzdGF1cmFudHMsIG5ldyBNYXAocmVzdGF1cmFudEVudHJpZXMpLCBcImZcIik7XG4gICAgfVxuICAgIGFkZChyZXN0YXVyYW50KSB7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc3RhdXJhbnRMaXN0X3Jlc3RhdXJhbnRzLCBcImZcIikuc2V0KHJlc3RhdXJhbnQubmFtZSwgcmVzdGF1cmFudCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICBpZiAoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudExpc3RfcmVzdGF1cmFudHMsIFwiZlwiKS5nZXQobmFtZSkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiW0VSUk9SX0lOX1Jlc3RhdXJhbnRMaXN0LnRzXSBSZXN0YXVyYW50TGlzdCDsg4Htg5woI3Jlc3RhdXJhbnRzKeyXkCDsoITri6zrsJvsnYAgbmFtZeydhCDssL7snYQg7IiYIOyXhuyKteuLiOuLpC4odW5kZWZpbmVkKVwiKTtcbiAgICAgICAgfVxuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cywgXCJmXCIpLmRlbGV0ZShuYW1lKTtcbiAgICB9XG4gICAgYnJpbmdSZXN0YXVyYW50SW5mbyhuYW1lKSB7XG4gICAgICAgIGlmIChfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cywgXCJmXCIpLmdldChuYW1lKSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJbRVJST1JdIFRoaXMgaXMgaW52YWxpZCByZXN0YXVyYW50IG5hbWVcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc3RhdXJhbnRMaXN0X3Jlc3RhdXJhbnRzLCBcImZcIikuZ2V0KG5hbWUpO1xuICAgIH1cbiAgICB1cGRhdGVGYXZvcml0ZXMobmFtZSkge1xuICAgICAgICBjb25zdCByZXN0YXVyYW50VmFsdWUgPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cywgXCJmXCIpLmdldChuYW1lKTtcbiAgICAgICAgaWYgKCFyZXN0YXVyYW50VmFsdWUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIltFUlJPUl0gVGhpcyBpcyBpbnZhbGlkIHJlc3RhdXJhbnQgbmFtZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmYXZvcml0ZXNTdGF0ZSA9IHJlc3RhdXJhbnRWYWx1ZS5mYXZvcml0ZXM7XG4gICAgICAgIGNvbnN0IG5ld1Jlc3RhdXJhbnRWYWx1ZSA9IHtcbiAgICAgICAgICAgIC4uLnJlc3RhdXJhbnRWYWx1ZSxcbiAgICAgICAgICAgIGZhdm9yaXRlczogIWZhdm9yaXRlc1N0YXRlLFxuICAgICAgICB9O1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cywgXCJmXCIpLnNldChuYW1lLCBuZXdSZXN0YXVyYW50VmFsdWUpO1xuICAgIH1cbiAgICBjb252ZXJ0ZWRSZXN0YXVyYW50cygpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudExpc3RfcmVzdGF1cmFudHMsIFwiZlwiKS52YWx1ZXMoKSk7XG4gICAgfVxuICAgIHdpdGhGYXZvcml0ZXMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRzID0gdGhpcy5jb252ZXJ0ZWRSZXN0YXVyYW50cygpO1xuICAgICAgICByZXR1cm4gcmVzdGF1cmFudHMuZmlsdGVyKChyZXN0YXVyYW50KSA9PiByZXN0YXVyYW50LmZhdm9yaXRlcyA9PT0gdHJ1ZSk7XG4gICAgfVxuICAgIGdldE9yZGVyZWRSZXN0YXVyYW50KHsgY2F0ZWdvcnksIHNvcnRTdGFuZGFyZCwgfSkge1xuICAgICAgICBjb25zdCBmaWx0ZXJlZFJlc3RhdXJhbnQgPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50TGlzdF9pbnN0YW5jZXMsIFwibVwiLCBfUmVzdGF1cmFudExpc3RfZmlsdGVyQnlDYXRlZ29yeSkuY2FsbCh0aGlzLCBjYXRlZ29yeSk7XG4gICAgICAgIGZpbHRlcmVkUmVzdGF1cmFudC5zb3J0KF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc3RhdXJhbnRMaXN0X3NvcnRDYWxsYmFjaywgXCJmXCIpW3NvcnRTdGFuZGFyZF0pO1xuICAgICAgICByZXR1cm4gZmlsdGVyZWRSZXN0YXVyYW50O1xuICAgIH1cbn1cbl9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cyA9IG5ldyBXZWFrTWFwKCksIF9SZXN0YXVyYW50TGlzdF9zb3J0Q2FsbGJhY2sgPSBuZXcgV2Vha01hcCgpLCBfUmVzdGF1cmFudExpc3RfaW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX1Jlc3RhdXJhbnRMaXN0X2ZpbHRlckJ5Q2F0ZWdvcnkgPSBmdW5jdGlvbiBfUmVzdGF1cmFudExpc3RfZmlsdGVyQnlDYXRlZ29yeShjYXRlZ29yeSkge1xuICAgIGNvbnN0IHJlc3RhdXJhbnRzID0gdGhpcy5jb252ZXJ0ZWRSZXN0YXVyYW50cygpO1xuICAgIGlmIChjYXRlZ29yeSA9PT0gQ0FURUdPUllfV0lUSF9FTlRJUkVbMF0pIHtcbiAgICAgICAgcmV0dXJuIHJlc3RhdXJhbnRzO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdGF1cmFudHMuZmlsdGVyKChyZXN0YXVyYW50KSA9PiByZXN0YXVyYW50LmNhdGVnb3J5ID09PSBjYXRlZ29yeSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgUmVzdGF1cmFudExpc3Q7XG4iLCJjb25zdCBzZXRMb2NhbFN0b3JhZ2VJdGVtID0gKGtleSwgdmFsdWUpID0+IHtcbiAgICBjb25zdCBsb2NhbFN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgIGNvbnN0IHN0cmluZ2lmaWVkUmVzdGF1cmFudHMgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBzdHJpbmdpZmllZFJlc3RhdXJhbnRzKTtcbn07XG5leHBvcnQgZGVmYXVsdCBzZXRMb2NhbFN0b3JhZ2VJdGVtO1xuIiwiaW1wb3J0IFJlc3RhdXJhbnRMaXN0IGZyb20gXCIuL1Jlc3RhdXJhbnRMaXN0XCI7XG5pbXBvcnQgc2V0TG9jYWxTdG9yYWdlSXRlbSBmcm9tIFwiLi4vdXRpbHMvc2V0TG9jYWxTdG9yYWdlSXRlbVwiO1xuY29uc3QgQWxsUmVzdGF1cmFudExpc3QgPSBuZXcgUmVzdGF1cmFudExpc3QoKTtcbmV4cG9ydCBkZWZhdWx0IEFsbFJlc3RhdXJhbnRMaXN0O1xuY29uc3QgdXBkYXRlTG9jYWxTdG9yYWdlID0gKCkgPT4ge1xuICAgIHNldExvY2FsU3RvcmFnZUl0ZW0oXCJhbGxSZXN0YXVyYW50c1wiLCBBbGxSZXN0YXVyYW50TGlzdC5jb252ZXJ0ZWRSZXN0YXVyYW50cygpKTtcbn07XG5leHBvcnQgY29uc3QgZ2V0UmVzdGF1cmFudCA9IChyZXN0YXVyYW50TmFtZSkgPT4ge1xuICAgIHJldHVybiBBbGxSZXN0YXVyYW50TGlzdC5icmluZ1Jlc3RhdXJhbnRJbmZvKHJlc3RhdXJhbnROYW1lKTtcbn07XG5leHBvcnQgY29uc3QgcG9zdFJlc3RhdXJhbnQgPSAocmVzdGF1cmFudCkgPT4ge1xuICAgIEFsbFJlc3RhdXJhbnRMaXN0LmFkZChyZXN0YXVyYW50KTtcbiAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcbn07XG5leHBvcnQgY29uc3QgZGVsZXRlUmVzdGF1cmFudCA9IChyZXN0YXVyYW50TmFtZSkgPT4ge1xuICAgIEFsbFJlc3RhdXJhbnRMaXN0LmRlbGV0ZShyZXN0YXVyYW50TmFtZSk7XG4gICAgdXBkYXRlTG9jYWxTdG9yYWdlKCk7XG59O1xuZXhwb3J0IGNvbnN0IHBhdGNoUmVzdGF1cmFudEZhdm9yaXRlcyA9IChyZXN0YXVyYW50TmFtZSkgPT4ge1xuICAgIEFsbFJlc3RhdXJhbnRMaXN0LnVwZGF0ZUZhdm9yaXRlcyhyZXN0YXVyYW50TmFtZSk7XG4gICAgdXBkYXRlTG9jYWxTdG9yYWdlKCk7XG59O1xuIiwiY29uc3QgRk9STV9JVEVNX1RFWFRTID0ge1xuICAgIGZvcm1UaXRsZTogXCLsg4jroZzsmrQg7J2M7Iud7KCQXCIsXG4gICAgY2F0ZWdvcnlUaXRsZTogXCLsubTthYzqs6DrpqxcIixcbiAgICBuYW1lVGl0bGU6IFwi7J2066aEXCIsXG4gICAgZGlzdGFuY2VUaXRsZTogXCLqsbDrpqwo64+E67O0IOydtOuPmSDsi5zqsIQpXCIsXG4gICAgZGVzY3JpcHRpb25UaXRsZTogXCLshKTrqoVcIixcbiAgICBkZXNjcmlwdGlvbkRlc2NyaXB0aW9uOiBcIuuplOuJtCDrk7Eg7LaU6rCAIOygleuztOulvCDsnoXroKXtlbQg7KO87IS47JqUXCIsXG4gICAgbGlua1RpdGxlOiBcIuywuOqzoCDrp4HtgaxcIixcbiAgICBsaW5rRGVzY3JpcHRpb246IFwi66ek7J6lIOygleuztOulvCDtmZXsnbjtlaAg7IiY7J6I64qUIOunge2BrOulvCDsnoXroKXtlbQg7KO87IS47JqULlwiLFxuICAgIGNhbmNlbEJ1dHRvbjogXCLst6jshoztlZjquLBcIixcbiAgICBhZGRCdXR0b246IFwi7LaU6rCA7ZWY6riwXCIsXG59O1xuZXhwb3J0IGRlZmF1bHQgRk9STV9JVEVNX1RFWFRTO1xuIiwiY29uc3QgY3JlYXRlRWxlbWVudEJ5VGFnID0gKHsgdGFnLCBjbGFzc2VzID0gW10sIGNvbnRlbnRzID0gXCJcIiwgYXR0cmlidXRlID0ge30sIH0pID0+IHtcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCguLi5jbGFzc2VzKTtcbiAgICBlbGVtZW50LnRleHRDb250ZW50ID0gY29udGVudHM7XG4gICAgT2JqZWN0LmtleXMoYXR0cmlidXRlKS5mb3JFYWNoKChhdHRyaWJ1dGVOYW1lKSA9PiB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZU5hbWUsIGF0dHJpYnV0ZVthdHRyaWJ1dGVOYW1lXSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGVsZW1lbnQ7XG59O1xuZXhwb3J0IGRlZmF1bHQgY3JlYXRlRWxlbWVudEJ5VGFnO1xuIiwidmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX19jbGFzc1ByaXZhdGVGaWVsZFNldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZFNldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJtXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIG1ldGhvZCBpcyBub3Qgd3JpdGFibGVcIik7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgc2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIChraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IGYudmFsdWUgPSB2YWx1ZSA6IHN0YXRlLnNldChyZWNlaXZlciwgdmFsdWUpKSwgdmFsdWU7XG59O1xudmFyIF9Gb3JtSXRlbV9pbnN0YW5jZXMsIF9Gb3JtSXRlbV9yZWFkYWJsZUVsZW1lbnQsIF9Gb3JtSXRlbV9jcmVhdGVJdGVtLCBfRm9ybUl0ZW1fY3JlYXRlTGFiZWwsIF9Gb3JtSXRlbV9jcmVhdGVTcGFuO1xuaW1wb3J0IGNyZWF0ZUVsZW1lbnRCeVRhZyBmcm9tIFwiLi4vLi4vdXRpbHMvY3JlYXRlRWxlbWVudEJ5VGFnXCI7XG5jbGFzcyBGb3JtSXRlbSB7XG4gICAgY29uc3RydWN0b3IoeyBzdWJqZWN0LCByZWFkYWJsZUVsZW1lbnQsIGlzUmVxdWlyZWQgPSBmYWxzZSwgZGVzY3JpcHRpb24gPSBcIlwiLCB9KSB7XG4gICAgICAgIF9Gb3JtSXRlbV9pbnN0YW5jZXMuYWRkKHRoaXMpO1xuICAgICAgICBfRm9ybUl0ZW1fcmVhZGFibGVFbGVtZW50LnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICB0aGlzLml0ZW0gPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Gb3JtSXRlbV9pbnN0YW5jZXMsIFwibVwiLCBfRm9ybUl0ZW1fY3JlYXRlSXRlbSkuY2FsbCh0aGlzLCBpc1JlcXVpcmVkKTtcbiAgICAgICAgY29uc3QgbGFiZWwgPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Gb3JtSXRlbV9pbnN0YW5jZXMsIFwibVwiLCBfRm9ybUl0ZW1fY3JlYXRlTGFiZWwpLmNhbGwodGhpcywgc3ViamVjdCwgcmVhZGFibGVFbGVtZW50LmlkKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfRm9ybUl0ZW1fcmVhZGFibGVFbGVtZW50LCByZWFkYWJsZUVsZW1lbnQsIFwiZlwiKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRm9ybUl0ZW1fcmVhZGFibGVFbGVtZW50LCBcImZcIikucmVxdWlyZWQgPSBpc1JlcXVpcmVkO1xuICAgICAgICBjb25zdCBzcGFuID0gX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRm9ybUl0ZW1faW5zdGFuY2VzLCBcIm1cIiwgX0Zvcm1JdGVtX2NyZWF0ZVNwYW4pLmNhbGwodGhpcywgZGVzY3JpcHRpb24pO1xuICAgICAgICB0aGlzLml0ZW0uYXBwZW5kKGxhYmVsLCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9Gb3JtSXRlbV9yZWFkYWJsZUVsZW1lbnQsIFwiZlwiKSwgc3Bhbik7XG4gICAgfVxuICAgIHJlc2V0Rm9ybSgpIHtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRm9ybUl0ZW1fcmVhZGFibGVFbGVtZW50LCBcImZcIikudmFsdWUgPSBcIlwiO1xuICAgIH1cbn1cbl9Gb3JtSXRlbV9yZWFkYWJsZUVsZW1lbnQgPSBuZXcgV2Vha01hcCgpLCBfRm9ybUl0ZW1faW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX0Zvcm1JdGVtX2NyZWF0ZUl0ZW0gPSBmdW5jdGlvbiBfRm9ybUl0ZW1fY3JlYXRlSXRlbShpc1JlcXVpcmVkKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJkaXZcIixcbiAgICAgICAgY2xhc3NlczogaXNSZXF1aXJlZFxuICAgICAgICAgICAgPyBbXCJmb3JtLWl0ZW1cIiwgXCJmb3JtLWl0ZW0tLXJlcXVpcmVkXCJdXG4gICAgICAgICAgICA6IFtcImZvcm0taXRlbVwiXSxcbiAgICB9KTtcbn0sIF9Gb3JtSXRlbV9jcmVhdGVMYWJlbCA9IGZ1bmN0aW9uIF9Gb3JtSXRlbV9jcmVhdGVMYWJlbChzdWJqZWN0LCByZWFkYWJsZUVsZW1lbnRJZCkge1xuICAgIGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIGxhYmVsLmh0bWxGb3IgPSBgJHtyZWFkYWJsZUVsZW1lbnRJZH0gdGV4dC1jYXB0aW9uYDtcbiAgICBsYWJlbC50ZXh0Q29udGVudCA9IHN1YmplY3Q7XG4gICAgcmV0dXJuIGxhYmVsO1xufSwgX0Zvcm1JdGVtX2NyZWF0ZVNwYW4gPSBmdW5jdGlvbiBfRm9ybUl0ZW1fY3JlYXRlU3BhbihkZXNjcmlwdGlvbikge1xuICAgIGNvbnN0IHNwYW4gPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwic3BhblwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJoZWxwLXRleHRcIiwgXCJ0ZXh0LWNhcHRpb25cIl0sXG4gICAgICAgIGNvbnRlbnRzOiBkZXNjcmlwdGlvbixcbiAgICB9KTtcbiAgICByZXR1cm4gc3Bhbjtcbn07XG5leHBvcnQgZGVmYXVsdCBGb3JtSXRlbTtcbiIsImltcG9ydCBjcmVhdGVFbGVtZW50QnlUYWcgZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUVsZW1lbnRCeVRhZ1wiO1xuY29uc3QgZ2VuZXJhdGVCdXR0b24gPSAoeyB2YWx1ZSwgY2xhc3NlcyA9IFtdLCBvbkNsaWNrSGFuZGxlciA9ICgpID0+IHsgfSwgfSkgPT4ge1xuICAgIGNvbnN0IGJ1dHRvbiA9IGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJidXR0b25cIixcbiAgICAgICAgY2xhc3NlcyxcbiAgICAgICAgY29udGVudHM6IHZhbHVlLFxuICAgIH0pO1xuICAgIGlmICghKGJ1dHRvbiBpbnN0YW5jZW9mIEhUTUxCdXR0b25FbGVtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJbRVJST1JdIEJ1dHRvbiBpcyBub3QgSFRNTEJ1dHRvbkVsZW1lbnRcIik7XG4gICAgfVxuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGlja0hhbmRsZXIpO1xuICAgIHJldHVybiBidXR0b247XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVCdXR0b247XG4iLCJpbXBvcnQgZ2VuZXJhdGVCdXR0b24gZnJvbSBcIi4vZ2VuZXJhdGVCdXR0b25cIjtcbmNvbnN0IGdlbmVyYXRlUHJpbWFyeUJ1dHRvbiA9ICh7IHZhbHVlLCBvbkNsaWNrSGFuZGxlciB9KSA9PiB7XG4gICAgY29uc3QgcHJpbWFyeUJ1dHRvbiA9IGdlbmVyYXRlQnV0dG9uKHtcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIGNsYXNzZXM6IFtcImJ1dHRvblwiLCBcImJ1dHRvbi0tcHJpbWFyeVwiLCBcInRleHQtY2FwdGlvblwiXSxcbiAgICAgICAgb25DbGlja0hhbmRsZXIsXG4gICAgfSk7XG4gICAgcmV0dXJuIHByaW1hcnlCdXR0b247XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVQcmltYXJ5QnV0dG9uO1xuIiwiaW1wb3J0IGdlbmVyYXRlQnV0dG9uIGZyb20gXCIuL2dlbmVyYXRlQnV0dG9uXCI7XG5jb25zdCBnZW5lcmF0ZVNlY29uZGFyeUJ1dHRvbiA9ICh7IHZhbHVlLCBvbkNsaWNrSGFuZGxlciB9KSA9PiB7XG4gICAgY29uc3Qgc2Vjb25kYXJ5QnV0dG9uID0gZ2VuZXJhdGVCdXR0b24oe1xuICAgICAgICB2YWx1ZSxcbiAgICAgICAgY2xhc3NlczogW1wiYnV0dG9uXCIsIFwiYnV0dG9uLS1zZWNvbmRhcnlcIiwgXCJ0ZXh0LWNhcHRpb25cIl0sXG4gICAgICAgIG9uQ2xpY2tIYW5kbGVyLFxuICAgIH0pO1xuICAgIHJldHVybiBzZWNvbmRhcnlCdXR0b247XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVTZWNvbmRhcnlCdXR0b247XG4iLCJpbXBvcnQgeyBERUZBVUxUX1VOU0VMRUNURURfT1BUSU9OIH0gZnJvbSBcIi4uLy4uLy4uL2NvbnN0YW50cy9zZWxlY3RPcHRpb25zXCI7XG5jb25zdCBnZW5lcmF0ZVNlbGVjdEJveE9wdGlvbiA9IChvcHRpb25zKSA9PiB7XG4gICAgcmV0dXJuIG9wdGlvbnMubWFwKChvcHRpb24pID0+IHtcbiAgICAgICAgY29uc3Qgb3B0aW9uRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgICAgIG9wdGlvbkVsZW1lbnQuaW5uZXJUZXh0ID0gb3B0aW9uO1xuICAgICAgICBvcHRpb25FbGVtZW50LnZhbHVlID0gb3B0aW9uO1xuICAgICAgICByZXR1cm4gb3B0aW9uRWxlbWVudDtcbiAgICB9KTtcbn07XG5jb25zdCBnZW5lcmF0ZVNlbGVjdEJveCA9ICh7IG9wdGlvbnMsIGhhc0RlZmF1bHRPcHRpb24gPSB0cnVlLCBuYW1lID0gXCJcIiwgfSkgPT4ge1xuICAgIGNvbnN0IHNlbGVjdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xuICAgIHNlbGVjdEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInNlbGVjdC1ib3hcIiwgXCJyZXN0YXVyYW50LWZpbHRlclwiKTtcbiAgICBzZWxlY3RFbGVtZW50Lm5hbWUgPSBuYW1lO1xuICAgIGNvbnN0IG9wdGlvbkVsZW1lbnRzID0gZ2VuZXJhdGVTZWxlY3RCb3hPcHRpb24ob3B0aW9ucyk7XG4gICAgaWYgKCFoYXNEZWZhdWx0T3B0aW9uKSB7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRPcHRpb24gPSBnZW5lcmF0ZVNlbGVjdEJveE9wdGlvbihbXG4gICAgICAgICAgICBERUZBVUxUX1VOU0VMRUNURURfT1BUSU9OLFxuICAgICAgICBdKVswXTtcbiAgICAgICAgZGVmYXVsdE9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgIGRlZmF1bHRPcHRpb24uZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICBkZWZhdWx0T3B0aW9uLnZhbHVlID0gXCJcIjtcbiAgICAgICAgc2VsZWN0RWxlbWVudC5hcHBlbmQoZGVmYXVsdE9wdGlvbik7XG4gICAgfVxuICAgIHNlbGVjdEVsZW1lbnQuYXBwZW5kKC4uLm9wdGlvbkVsZW1lbnRzKTtcbiAgICByZXR1cm4gc2VsZWN0RWxlbWVudDtcbn07XG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZVNlbGVjdEJveDtcbiIsInZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59O1xudmFyIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRTZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIHZhbHVlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwibVwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBtZXRob2QgaXMgbm90IHdyaXRhYmxlXCIpO1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiAoa2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIsIHZhbHVlKSA6IGYgPyBmLnZhbHVlID0gdmFsdWUgOiBzdGF0ZS5zZXQocmVjZWl2ZXIsIHZhbHVlKSksIHZhbHVlO1xufTtcbnZhciBfQWRkUmVzdGF1cmFudEZvcm1faW5zdGFuY2VzLCBfQWRkUmVzdGF1cmFudEZvcm1fY2F0ZWdvcnlGb3JtSXRlbSwgX0FkZFJlc3RhdXJhbnRGb3JtX25hbWVGb3JtSXRlbSwgX0FkZFJlc3RhdXJhbnRGb3JtX2Rpc3RhbmNlRm9ybUl0ZW0sIF9BZGRSZXN0YXVyYW50Rm9ybV9kZXNjcmlwdGlvbkZvcm1JdGVtLCBfQWRkUmVzdGF1cmFudEZvcm1fbGlua0Zvcm1JdGVtLCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQ2F0ZWdvcnlGb3JtSXRlbSwgX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZU5hbWVGb3JtSXRlbSwgX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZURpc3RhbmNlRm9ybUl0ZW0sIF9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVEZXNjcmlwdGlvbkZvcm1JdGVtLCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlTGlua0Zvcm1JdGVtLCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQnV0dG9uRGl2LCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQ2FuY2VsQnV0dG9uLCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQWRkQnV0dG9uO1xuaW1wb3J0IHsgQ0FURUdPUlksIERJU1RBTkNFIH0gZnJvbSBcIi4uLy4uLy4uL2NvbnN0YW50cy9zZWxlY3RPcHRpb25zXCI7XG5pbXBvcnQgRk9STV9JVEVNX1RFWFRTIGZyb20gXCIuLi8uLi8uLi9jb25zdGFudHMvZm9ybUl0ZW1UZXh0c1wiO1xuaW1wb3J0IEZvcm1JdGVtIGZyb20gXCIuL0Zvcm1JdGVtXCI7XG5pbXBvcnQgY3JlYXRlRWxlbWVudEJ5VGFnIGZyb20gXCIuLi8uLi91dGlscy9jcmVhdGVFbGVtZW50QnlUYWdcIjtcbmltcG9ydCBnZW5lcmF0ZVByaW1hcnlCdXR0b24gZnJvbSBcIi4uL0J1dHRvbi9nZW5lcmF0ZVByaW1hcnlCdXR0b25cIjtcbmltcG9ydCBnZW5lcmF0ZVNlY29uZGFyeUJ1dHRvbiBmcm9tIFwiLi4vQnV0dG9uL2dlbmVyYXRlU2Vjb25kYXJ5QnV0dG9uXCI7XG5pbXBvcnQgZ2VuZXJhdGVTZWxlY3RCb3ggZnJvbSBcIi4uL1JlYWRhYmxlRWxlbWVudC9nZW5lcmF0ZVNlbGVjdEJveFwiO1xuY2xhc3MgQWRkUmVzdGF1cmFudEZvcm0ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBfQWRkUmVzdGF1cmFudEZvcm1faW5zdGFuY2VzLmFkZCh0aGlzKTtcbiAgICAgICAgX0FkZFJlc3RhdXJhbnRGb3JtX2NhdGVnb3J5Rm9ybUl0ZW0uc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9BZGRSZXN0YXVyYW50Rm9ybV9uYW1lRm9ybUl0ZW0uc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9BZGRSZXN0YXVyYW50Rm9ybV9kaXN0YW5jZUZvcm1JdGVtLnNldCh0aGlzLCB2b2lkIDApO1xuICAgICAgICBfQWRkUmVzdGF1cmFudEZvcm1fZGVzY3JpcHRpb25Gb3JtSXRlbS5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX0FkZFJlc3RhdXJhbnRGb3JtX2xpbmtGb3JtSXRlbS5zZXQodGhpcywgdm9pZCAwKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1fY2F0ZWdvcnlGb3JtSXRlbSwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1faW5zdGFuY2VzLCBcIm1cIiwgX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZUNhdGVnb3J5Rm9ybUl0ZW0pLmNhbGwodGhpcyksIFwiZlwiKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZFNldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1fbmFtZUZvcm1JdGVtLCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BZGRSZXN0YXVyYW50Rm9ybV9pbnN0YW5jZXMsIFwibVwiLCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlTmFtZUZvcm1JdGVtKS5jYWxsKHRoaXMpLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX2Rpc3RhbmNlRm9ybUl0ZW0sIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX2luc3RhbmNlcywgXCJtXCIsIF9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVEaXN0YW5jZUZvcm1JdGVtKS5jYWxsKHRoaXMpLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX2Rlc2NyaXB0aW9uRm9ybUl0ZW0sIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX2luc3RhbmNlcywgXCJtXCIsIF9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVEZXNjcmlwdGlvbkZvcm1JdGVtKS5jYWxsKHRoaXMpLCBcImZcIik7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX2xpbmtGb3JtSXRlbSwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1faW5zdGFuY2VzLCBcIm1cIiwgX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZUxpbmtGb3JtSXRlbSkuY2FsbCh0aGlzKSwgXCJmXCIpO1xuICAgIH1cbiAgICBnZXRGb3JtKHsgaGFuZGxlQ2xpY2tDYW5jZWxCdXR0b24sIGhhbmRsZUNsaWNrQWRkQnV0dG9uLCB9KSB7XG4gICAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgICAgICAgZm9ybS5hcHBlbmQoX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1fY2F0ZWdvcnlGb3JtSXRlbSwgXCJmXCIpLml0ZW0sIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX25hbWVGb3JtSXRlbSwgXCJmXCIpLml0ZW0sIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX2Rpc3RhbmNlRm9ybUl0ZW0sIFwiZlwiKS5pdGVtLCBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BZGRSZXN0YXVyYW50Rm9ybV9kZXNjcmlwdGlvbkZvcm1JdGVtLCBcImZcIikuaXRlbSwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1fbGlua0Zvcm1JdGVtLCBcImZcIikuaXRlbSwgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1faW5zdGFuY2VzLCBcIm1cIiwgX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZUJ1dHRvbkRpdikuY2FsbCh0aGlzLCB7IGhhbmRsZUNsaWNrQ2FuY2VsQnV0dG9uLCBoYW5kbGVDbGlja0FkZEJ1dHRvbiB9KSk7XG4gICAgICAgIHJldHVybiBmb3JtO1xuICAgIH1cbiAgICByZXNldEZvcm1zKCkge1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BZGRSZXN0YXVyYW50Rm9ybV9jYXRlZ29yeUZvcm1JdGVtLCBcImZcIikucmVzZXRGb3JtKCk7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX25hbWVGb3JtSXRlbSwgXCJmXCIpLnJlc2V0Rm9ybSgpO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BZGRSZXN0YXVyYW50Rm9ybV9kaXN0YW5jZUZvcm1JdGVtLCBcImZcIikucmVzZXRGb3JtKCk7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX0FkZFJlc3RhdXJhbnRGb3JtX2Rlc2NyaXB0aW9uRm9ybUl0ZW0sIFwiZlwiKS5yZXNldEZvcm0oKTtcbiAgICAgICAgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfQWRkUmVzdGF1cmFudEZvcm1fbGlua0Zvcm1JdGVtLCBcImZcIikucmVzZXRGb3JtKCk7XG4gICAgfVxufVxuX0FkZFJlc3RhdXJhbnRGb3JtX2NhdGVnb3J5Rm9ybUl0ZW0gPSBuZXcgV2Vha01hcCgpLCBfQWRkUmVzdGF1cmFudEZvcm1fbmFtZUZvcm1JdGVtID0gbmV3IFdlYWtNYXAoKSwgX0FkZFJlc3RhdXJhbnRGb3JtX2Rpc3RhbmNlRm9ybUl0ZW0gPSBuZXcgV2Vha01hcCgpLCBfQWRkUmVzdGF1cmFudEZvcm1fZGVzY3JpcHRpb25Gb3JtSXRlbSA9IG5ldyBXZWFrTWFwKCksIF9BZGRSZXN0YXVyYW50Rm9ybV9saW5rRm9ybUl0ZW0gPSBuZXcgV2Vha01hcCgpLCBfQWRkUmVzdGF1cmFudEZvcm1faW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZUNhdGVnb3J5Rm9ybUl0ZW0gPSBmdW5jdGlvbiBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQ2F0ZWdvcnlGb3JtSXRlbSgpIHtcbiAgICBjb25zdCBjYXRlZ29yeVNlbGVjdEJveEluTW9kYWwgPSBnZW5lcmF0ZVNlbGVjdEJveCh7XG4gICAgICAgIG9wdGlvbnM6IENBVEVHT1JZLFxuICAgICAgICBoYXNEZWZhdWx0T3B0aW9uOiBmYWxzZSxcbiAgICAgICAgbmFtZTogXCJjYXRlZ29yeVwiLFxuICAgIH0pO1xuICAgIGNvbnN0IGNhdGVnb3J5Rm9ybUl0ZW0gPSBuZXcgRm9ybUl0ZW0oe1xuICAgICAgICBzdWJqZWN0OiBGT1JNX0lURU1fVEVYVFMuY2F0ZWdvcnlUaXRsZSxcbiAgICAgICAgcmVhZGFibGVFbGVtZW50OiBjYXRlZ29yeVNlbGVjdEJveEluTW9kYWwsXG4gICAgICAgIGlzUmVxdWlyZWQ6IHRydWUsXG4gICAgfSk7XG4gICAgcmV0dXJuIGNhdGVnb3J5Rm9ybUl0ZW07XG59LCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlTmFtZUZvcm1JdGVtID0gZnVuY3Rpb24gX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZU5hbWVGb3JtSXRlbSgpIHtcbiAgICBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgbmFtZUlucHV0LnR5cGUgPSBcInRleHRcIjtcbiAgICBuYW1lSW5wdXQubmFtZSA9IFwibmFtZVwiO1xuICAgIG5hbWVJbnB1dC5pZCA9IFwibmFtZVwiO1xuICAgIG5hbWVJbnB1dC5yZXF1aXJlZCA9IHRydWU7XG4gICAgY29uc3QgbmFtZUZvcm1JdGVtID0gbmV3IEZvcm1JdGVtKHtcbiAgICAgICAgc3ViamVjdDogRk9STV9JVEVNX1RFWFRTLm5hbWVUaXRsZSxcbiAgICAgICAgcmVhZGFibGVFbGVtZW50OiBuYW1lSW5wdXQsXG4gICAgICAgIGlzUmVxdWlyZWQ6IHRydWUsXG4gICAgfSk7XG4gICAgcmV0dXJuIG5hbWVGb3JtSXRlbTtcbn0sIF9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVEaXN0YW5jZUZvcm1JdGVtID0gZnVuY3Rpb24gX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZURpc3RhbmNlRm9ybUl0ZW0oKSB7XG4gICAgY29uc3QgRElTVEFOQ0VfU1RSSU5HUyA9IERJU1RBTkNFLm1hcChTdHJpbmcpO1xuICAgIGNvbnN0IGRpc3RhbmNlU2VsZWN0Qm94SW5Nb2RhbCA9IGdlbmVyYXRlU2VsZWN0Qm94KHtcbiAgICAgICAgb3B0aW9uczogRElTVEFOQ0VfU1RSSU5HUyxcbiAgICAgICAgaGFzRGVmYXVsdE9wdGlvbjogZmFsc2UsXG4gICAgICAgIG5hbWU6IFwiZGlzdGFuY2VcIixcbiAgICB9KTtcbiAgICBjb25zdCBkaXN0YW5jZUZvcm1JdGVtID0gbmV3IEZvcm1JdGVtKHtcbiAgICAgICAgc3ViamVjdDogRk9STV9JVEVNX1RFWFRTLmRpc3RhbmNlVGl0bGUsXG4gICAgICAgIHJlYWRhYmxlRWxlbWVudDogZGlzdGFuY2VTZWxlY3RCb3hJbk1vZGFsLFxuICAgICAgICBpc1JlcXVpcmVkOiB0cnVlLFxuICAgIH0pO1xuICAgIHJldHVybiBkaXN0YW5jZUZvcm1JdGVtO1xufSwgX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZURlc2NyaXB0aW9uRm9ybUl0ZW0gPSBmdW5jdGlvbiBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlRGVzY3JpcHRpb25Gb3JtSXRlbSgpIHtcbiAgICBjb25zdCBkZXNjcmlwdGlvblRleHRBcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIpO1xuICAgIGRlc2NyaXB0aW9uVGV4dEFyZWEubmFtZSA9IFwiZGVzY3JpcHRpb25cIjtcbiAgICBkZXNjcmlwdGlvblRleHRBcmVhLmlkID0gXCJkZXNjcmlwdGlvblwiO1xuICAgIGRlc2NyaXB0aW9uVGV4dEFyZWEuY29scyA9IDMwO1xuICAgIGRlc2NyaXB0aW9uVGV4dEFyZWEucm93cyA9IDU7XG4gICAgY29uc3QgZGVzY3JpcHRpb25Gb3JtSXRlbSA9IG5ldyBGb3JtSXRlbSh7XG4gICAgICAgIHN1YmplY3Q6IEZPUk1fSVRFTV9URVhUUy5kZXNjcmlwdGlvblRpdGxlLFxuICAgICAgICByZWFkYWJsZUVsZW1lbnQ6IGRlc2NyaXB0aW9uVGV4dEFyZWEsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBGT1JNX0lURU1fVEVYVFMuZGVzY3JpcHRpb25EZXNjcmlwdGlvbixcbiAgICB9KTtcbiAgICByZXR1cm4gZGVzY3JpcHRpb25Gb3JtSXRlbTtcbn0sIF9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVMaW5rRm9ybUl0ZW0gPSBmdW5jdGlvbiBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlTGlua0Zvcm1JdGVtKCkge1xuICAgIGNvbnN0IGxpbmtJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBsaW5rSW5wdXQudHlwZSA9IFwidGV4dFwiO1xuICAgIGxpbmtJbnB1dC5uYW1lID0gXCJsaW5rXCI7XG4gICAgbGlua0lucHV0LmlkID0gXCJsaW5rXCI7XG4gICAgY29uc3QgbGlua0Zvcm1JdGVtID0gbmV3IEZvcm1JdGVtKHtcbiAgICAgICAgc3ViamVjdDogRk9STV9JVEVNX1RFWFRTLmxpbmtUaXRsZSxcbiAgICAgICAgcmVhZGFibGVFbGVtZW50OiBsaW5rSW5wdXQsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBGT1JNX0lURU1fVEVYVFMubGlua0Rlc2NyaXB0aW9uLFxuICAgIH0pO1xuICAgIHJldHVybiBsaW5rRm9ybUl0ZW07XG59LCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQnV0dG9uRGl2ID0gZnVuY3Rpb24gX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZUJ1dHRvbkRpdih7IGhhbmRsZUNsaWNrQ2FuY2VsQnV0dG9uLCBoYW5kbGVDbGlja0FkZEJ1dHRvbiwgfSkge1xuICAgIGNvbnN0IGJ1dHRvbkRpdiA9IGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJkaXZcIixcbiAgICAgICAgY2xhc3NlczogW1wiYnV0dG9uLWNvbnRhaW5lclwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBhZGRCdXR0b24gPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BZGRSZXN0YXVyYW50Rm9ybV9pbnN0YW5jZXMsIFwibVwiLCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQWRkQnV0dG9uKS5jYWxsKHRoaXMsIGhhbmRsZUNsaWNrQWRkQnV0dG9uKTtcbiAgICBjb25zdCBjYW5jZWxCdXR0b24gPSBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BZGRSZXN0YXVyYW50Rm9ybV9pbnN0YW5jZXMsIFwibVwiLCBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQ2FuY2VsQnV0dG9uKS5jYWxsKHRoaXMsIGhhbmRsZUNsaWNrQ2FuY2VsQnV0dG9uKTtcbiAgICBjYW5jZWxCdXR0b24udHlwZSA9IFwiYnV0dG9uXCI7XG4gICAgYnV0dG9uRGl2LmFwcGVuZChjYW5jZWxCdXR0b24sIGFkZEJ1dHRvbik7XG4gICAgcmV0dXJuIGJ1dHRvbkRpdjtcbn0sIF9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVDYW5jZWxCdXR0b24gPSBmdW5jdGlvbiBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQ2FuY2VsQnV0dG9uKGhhbmRsZUNsaWNrQ2FuY2VsQnV0dG9uKSB7XG4gICAgcmV0dXJuIGdlbmVyYXRlU2Vjb25kYXJ5QnV0dG9uKHtcbiAgICAgICAgdmFsdWU6IEZPUk1fSVRFTV9URVhUUy5jYW5jZWxCdXR0b24sXG4gICAgICAgIG9uQ2xpY2tIYW5kbGVyOiBoYW5kbGVDbGlja0NhbmNlbEJ1dHRvbixcbiAgICB9KTtcbn0sIF9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVBZGRCdXR0b24gPSBmdW5jdGlvbiBfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQWRkQnV0dG9uKGhhbmRsZUNsaWNrQWRkQnV0dG9uKSB7XG4gICAgcmV0dXJuIGdlbmVyYXRlUHJpbWFyeUJ1dHRvbih7XG4gICAgICAgIHZhbHVlOiBGT1JNX0lURU1fVEVYVFMuYWRkQnV0dG9uLFxuICAgICAgICBvbkNsaWNrSGFuZGxlcjogaGFuZGxlQ2xpY2tBZGRCdXR0b24sXG4gICAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQWRkUmVzdGF1cmFudEZvcm07XG4iLCJpbXBvcnQgZ2VuZXJhdGVNb2RhbCBmcm9tIFwiLi9nZW5lcmF0ZU1vZGFsXCI7XG5jbGFzcyBNb2RhbCB7XG4gICAgY29uc3RydWN0b3IoY2hpbGRyZW4pIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZ2VuZXJhdGVNb2RhbChjaGlsZHJlbik7XG4gICAgfVxuICAgIHRvZ2dsZSgpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoXCJtb2RhbC0tb3BlblwiKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBNb2RhbDtcbiIsImltcG9ydCBjcmVhdGVFbGVtZW50QnlUYWcgZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUVsZW1lbnRCeVRhZ1wiO1xuY29uc3QgZ2VuZXJhdGVNb2RhbCA9IChjb250ZW50cykgPT4ge1xuICAgIGNvbnN0IG1vZGFsRGl2ID0gY3JlYXRlRWxlbWVudEJ5VGFnKHtcbiAgICAgICAgdGFnOiBcImRpdlwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJtb2RhbFwiXSxcbiAgICB9KTtcbiAgICBjb25zdCBiYWNrRHJvcCA9IGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJkaXZcIixcbiAgICAgICAgY2xhc3NlczogW1wibW9kYWwtYmFja2Ryb3BcIl0sXG4gICAgfSk7XG4gICAgY29uc3QgY29udGFpbmVyID0gY3JlYXRlRWxlbWVudEJ5VGFnKHtcbiAgICAgICAgdGFnOiBcImRpdlwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJtb2RhbC1jb250YWluZXJcIl0sXG4gICAgfSk7XG4gICAgY29udGFpbmVyLmFwcGVuZCguLi5jb250ZW50cyk7XG4gICAgbW9kYWxEaXYuYXBwZW5kKGJhY2tEcm9wLCBjb250YWluZXIpO1xuICAgIGJhY2tEcm9wLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIG1vZGFsRGl2LmNsYXNzTGlzdC50b2dnbGUoXCJtb2RhbC0tb3BlblwiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gbW9kYWxEaXY7XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVNb2RhbDtcbiIsImltcG9ydCBBZGRSZXN0YXVyYW50Rm9ybSBmcm9tIFwiLi4vRm9ybS9BZGRSZXN0YXVyYW50Rm9ybVwiO1xuaW1wb3J0IEZPUk1fSVRFTV9URVhUUyBmcm9tIFwiLi4vLi4vLi4vY29uc3RhbnRzL2Zvcm1JdGVtVGV4dHNcIjtcbmltcG9ydCBNb2RhbCBmcm9tIFwiLi9Nb2RhbFwiO1xuY2xhc3MgQWRkaW5nUmVzdGF1cmFudE1vZGFsIGV4dGVuZHMgTW9kYWwge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcihBZGRpbmdNb2RhbENoaWxkcmVuKCkpO1xuICAgIH1cbn1cbmNvbnN0IEFkZGluZ01vZGFsQ2hpbGRyZW4gPSAoKSA9PiB7XG4gICAgY29uc3QgdGl0bGUgPSBnZXRUaXRsZSgpO1xuICAgIGNvbnN0IGZvcm0gPSBnZXRGb3JtKCk7XG4gICAgcmV0dXJuIFt0aXRsZSwgZm9ybV07XG59O1xuY29uc3QgZ2V0VGl0bGUgPSAoKSA9PiB7XG4gICAgY29uc3QgaDJJbk1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xuICAgIGgySW5Nb2RhbC50ZXh0Q29udGVudCA9IEZPUk1fSVRFTV9URVhUUy5mb3JtVGl0bGU7XG4gICAgaDJJbk1vZGFsLmNsYXNzTGlzdC5hZGQoXCJtb2RhbC10aXRsZVwiLCBcInRleHQtdGl0bGVcIik7XG4gICAgcmV0dXJuIGgySW5Nb2RhbDtcbn07XG5jb25zdCBnZXRGb3JtID0gKCkgPT4ge1xuICAgIGNvbnN0IGZvcm0gPSBuZXcgQWRkUmVzdGF1cmFudEZvcm0oKS5nZXRGb3JtKHtcbiAgICAgICAgaGFuZGxlQ2xpY2tDYW5jZWxCdXR0b246IChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS50YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xuICAgICAgICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIubW9kYWxcIik/LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbC0tb3BlblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlQ2xpY2tBZGRCdXR0b246ICgpID0+IHsgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gZm9ybTtcbn07XG5leHBvcnQgZGVmYXVsdCBBZGRpbmdSZXN0YXVyYW50TW9kYWw7XG4iLCJpbXBvcnQgY3JlYXRlRWxlbWVudEJ5VGFnIGZyb20gXCIuLi8uLi91dGlscy9jcmVhdGVFbGVtZW50QnlUYWdcIjtcbmV4cG9ydCBjb25zdCBUQUJfSURfUFJFRklYID0gXCJ0YWItXCI7XG5jb25zdCBnZW5lcmF0ZVRhYiA9ICh7IHRhYk1lbnUsIGNvbnRlbnRzQXJlYSB9KSA9PiB7XG4gICAgY29uc3QgdGFiVGl0bGVzID0gT2JqZWN0LmtleXModGFiTWVudSk7XG4gICAgY29uc3QgdGFiQ29udGFpbmVyID0gY3JlYXRlRWxlbWVudEJ5VGFnKHtcbiAgICAgICAgdGFnOiBcImRpdlwiLFxuICAgICAgICBhdHRyaWJ1dGU6IHsgdmFsdWU6IHRhYlRpdGxlc1swXSwgaWQ6IFwidGFiXCIgfSxcbiAgICB9KTtcbiAgICBjb25zdCB0YWJzID0gdGFiVGl0bGVzLm1hcCgobWVudSkgPT4gY3JlYXRlRWxlbWVudEJ5VGFnKHtcbiAgICAgICAgdGFnOiBcImJ1dHRvblwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJ0YWJcIl0sXG4gICAgICAgIGNvbnRlbnRzOiBtZW51LFxuICAgICAgICBhdHRyaWJ1dGU6IHsgaWQ6IGAke1RBQl9JRF9QUkVGSVh9JHttZW51fWAgfSxcbiAgICB9KSk7XG4gICAgdGFiQ29udGFpbmVyLmFwcGVuZCguLi50YWJzKTtcbiAgICBjb250ZW50c0FyZWEuYXBwZW5kKC4uLnRhYk1lbnVbdGFiVGl0bGVzWzBdXSk7XG4gICAgdGFiQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgICBpZiAoZS50YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gZS50YXJnZXQuaWQuc2xpY2UoVEFCX0lEX1BSRUZJWC5sZW5ndGgpO1xuICAgICAgICAgICAgY29udGVudHNBcmVhLnJlcGxhY2VDaGlsZHJlbiguLi50YWJNZW51W2tleV0pO1xuICAgICAgICAgICAgdGFiQ29udGFpbmVyLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGtleSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gdGFiQ29udGFpbmVyO1xufTtcbmV4cG9ydCBkZWZhdWx0IGdlbmVyYXRlVGFiO1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LWFzaWFuLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1jaGluZXNlLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1ldGMucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LWphcGFuZXNlLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1rb3JlYW4ucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LXdlc3Rlcm4ucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZhdm9yaXRlLWljb24tZmlsbGVkLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmYXZvcml0ZS1pY29uLWxpbmVkLnBuZ1wiOyIsImltcG9ydCBGQVZPUklURVMgZnJvbSBcIi4uLy4uLy4uLy4uL3RlbXBsYXRlcy9mYXZvcml0ZS1pY29uLWZpbGxlZC5wbmdcIjtcbmltcG9ydCBOT1RfRkFWT1JJVEVTIGZyb20gXCIuLi8uLi8uLi8uLi90ZW1wbGF0ZXMvZmF2b3JpdGUtaWNvbi1saW5lZC5wbmdcIjtcbmltcG9ydCBjcmVhdGVFbGVtZW50QnlUYWcgZnJvbSBcIi4uLy4uL3V0aWxzL2NyZWF0ZUVsZW1lbnRCeVRhZ1wiO1xuaW1wb3J0IGdlbmVyYXRlQnV0dG9uIGZyb20gXCIuL2dlbmVyYXRlQnV0dG9uXCI7XG5pbXBvcnQgeyBwYXRjaFJlc3RhdXJhbnRGYXZvcml0ZXMgfSBmcm9tIFwiLi4vLi4vLi4vZG9tYWluL0FsbFJlc3RhdXJhbnRMaXN0XCI7XG5jb25zdCBnZW5lcmF0ZUZhdm9yaXRlQnV0dG9uID0gKHsgaXNGYXZvcml0ZXMsIHJlc3RhdXJhbnROYW1lLCBvbkNsaWNrSGFuZGxlciA9ICgpID0+IHsgfSwgfSkgPT4ge1xuICAgIGNvbnN0IGZhdm9yaXRlQnV0dG9uID0gZ2VuZXJhdGVCdXR0b24oe1xuICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgY2xhc3NlczogW1wiYnV0dG9uLS1mYXZvcml0ZXNcIl0sXG4gICAgICAgIG9uQ2xpY2tIYW5kbGVyOiAoZSkgPT4ge1xuICAgICAgICAgICAgaGFuZGxlRmF2b3JpdGUoZSk7XG4gICAgICAgICAgICBvbkNsaWNrSGFuZGxlcihlKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCBmYXZvcml0ZUltYWdlID0gZ2V0RmF2b3JpdGVJbWFnZShpc0Zhdm9yaXRlcywgcmVzdGF1cmFudE5hbWUpO1xuICAgIGZhdm9yaXRlQnV0dG9uLmFwcGVuZENoaWxkKGZhdm9yaXRlSW1hZ2UpO1xuICAgIHJldHVybiBmYXZvcml0ZUJ1dHRvbjtcbn07XG5jb25zdCBnZXRGYXZvcml0ZUltYWdlID0gKGlzRmF2b3JpdGVzLCByZXN0YXVyYW50TmFtZSkgPT4ge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwiaW1nXCIsXG4gICAgICAgIGF0dHJpYnV0ZToge1xuICAgICAgICAgICAgc3JjOiBpc0Zhdm9yaXRlcyA/IEZBVk9SSVRFUyA6IE5PVF9GQVZPUklURVMsXG4gICAgICAgICAgICByZXN0YXVyYW50TmFtZTogcmVzdGF1cmFudE5hbWUsXG4gICAgICAgIH0sXG4gICAgfSk7XG59O1xuY29uc3QgaGFuZGxlRmF2b3JpdGUgPSAoZSkgPT4ge1xuICAgIGlmICghKGUudGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIltFUlJPUl9JTl9oYW5kbGVGYXZvcml0ZV0gRXZlbnRUYXJnZXQgaXMgbm90IEhUTUxFbGVtZW50XCIpO1xuICAgIH1cbiAgICB0b2dnbGVGYXZvcml0ZUJ1dHRvbkltYWdlKGUudGFyZ2V0KTtcbiAgICBwYXRjaFJlc3RhdXJhbnRGYXZvcml0ZXMoZS50YXJnZXQuZ2V0QXR0cmlidXRlKFwicmVzdGF1cmFudE5hbWVcIikpO1xufTtcbmNvbnN0IHRvZ2dsZUZhdm9yaXRlQnV0dG9uSW1hZ2UgPSAoZXZlbnRUYXJnZXQpID0+IHtcbiAgICBjb25zdCBjdXJyZW50SW1hZ2VTcmMgPSBldmVudFRhcmdldC5nZXRBdHRyaWJ1dGUoXCJzcmNcIik7XG4gICAgaWYgKGN1cnJlbnRJbWFnZVNyYykge1xuICAgICAgICBjb25zdCBuZXdTcmMgPSBjdXJyZW50SW1hZ2VTcmMgPT09IEZBVk9SSVRFUyA/IE5PVF9GQVZPUklURVMgOiBGQVZPUklURVM7XG4gICAgICAgIGV2ZW50VGFyZ2V0LnNldEF0dHJpYnV0ZShcInNyY1wiLCBuZXdTcmMpO1xuICAgIH1cbn07XG5leHBvcnQgZGVmYXVsdCBnZW5lcmF0ZUZhdm9yaXRlQnV0dG9uO1xuIiwiaW1wb3J0IEFTSUFOX0lDT04gZnJvbSBcIi4uLy4uLy4uL3RlbXBsYXRlcy9jYXRlZ29yeS1hc2lhbi5wbmdcIjtcbmltcG9ydCBDSElORVNFX0lDT04gZnJvbSBcIi4uLy4uLy4uL3RlbXBsYXRlcy9jYXRlZ29yeS1jaGluZXNlLnBuZ1wiO1xuaW1wb3J0IEVDVF9JQ09OIGZyb20gXCIuLi8uLi8uLi90ZW1wbGF0ZXMvY2F0ZWdvcnktZXRjLnBuZ1wiO1xuaW1wb3J0IEpBUEFORVNFX0lDT04gZnJvbSBcIi4uLy4uLy4uL3RlbXBsYXRlcy9jYXRlZ29yeS1qYXBhbmVzZS5wbmdcIjtcbmltcG9ydCBLT1JFQU5fSUNPTiBmcm9tIFwiLi4vLi4vLi4vdGVtcGxhdGVzL2NhdGVnb3J5LWtvcmVhbi5wbmdcIjtcbmltcG9ydCBXRVNURVJOX0lDT04gZnJvbSBcIi4uLy4uLy4uL3RlbXBsYXRlcy9jYXRlZ29yeS13ZXN0ZXJuLnBuZ1wiO1xuaW1wb3J0IGNyZWF0ZUVsZW1lbnRCeVRhZyBmcm9tIFwiLi4vdXRpbHMvY3JlYXRlRWxlbWVudEJ5VGFnXCI7XG5pbXBvcnQgZ2VuZXJhdGVGYXZvcml0ZUJ1dHRvbiBmcm9tIFwiLi9CdXR0b24vZ2VuZXJhdGVGYXZvcml0ZXNCdXR0b25cIjtcbmNvbnN0IGNhdGVnb3J5SW1nU3JjTWF0Y2hlciA9IHtcbiAgICDtlZzsi506IEtPUkVBTl9JQ09OLFxuICAgIOykkeyLnTogQ0hJTkVTRV9JQ09OLFxuICAgIOydvOyLnTogSkFQQU5FU0VfSUNPTixcbiAgICDslYTsi5zslYg6IEFTSUFOX0lDT04sXG4gICAg7JaR7IudOiBXRVNURVJOX0lDT04sXG4gICAg6riw7YOAOiBFQ1RfSUNPTixcbn07XG5leHBvcnQgY29uc3QgY3JlYXRlQ2F0ZWdvcnlEaXYgPSAoY2F0ZWdvcnkpID0+IHtcbiAgICBjb25zdCBkaXYgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwiZGl2XCIsXG4gICAgICAgIGNsYXNzZXM6IFtcInJlc3RhdXJhbnRfX2NhdGVnb3J5XCJdLFxuICAgIH0pO1xuICAgIGNvbnN0IGltZyA9IGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJpbWdcIixcbiAgICAgICAgY2xhc3NlczogW1wiY2F0ZWdvcnktaWNvblwiXSxcbiAgICB9KTtcbiAgICBpbWcuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNhdGVnb3J5SW1nU3JjTWF0Y2hlcltjYXRlZ29yeV0pO1xuICAgIGltZy5zZXRBdHRyaWJ1dGUoXCJhbHRcIiwgY2F0ZWdvcnkpO1xuICAgIGRpdi5hcHBlbmRDaGlsZChpbWcpO1xuICAgIHJldHVybiBkaXY7XG59O1xuZXhwb3J0IGNvbnN0IGNyZWF0ZU5hbWVIM1RhZyA9IChuYW1lKSA9PiB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJoM1wiLFxuICAgICAgICBjbGFzc2VzOiBbXCJyZXN0YXVyYW50X19uYW1lXCIsIFwidGV4dC1zdWJ0aXRsZVwiXSxcbiAgICAgICAgY29udGVudHM6IG5hbWUsXG4gICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IGNyZWF0ZURpc3RhbmNlU3BhbiA9IChkaXN0YW5jZSkgPT4ge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwic3BhblwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJyZXN0YXVyYW50X19kaXN0YW5jZVwiLCBcInRleHQtYm9keVwiXSxcbiAgICAgICAgY29udGVudHM6IGDsuqDtjbzsiqTroZzrtoDthLAgJHtkaXN0YW5jZX3rtoQg64K0YCxcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgY3JlYXRlRGVzY3JpcHRpb25QVGFnID0gKGRlc2NyaXB0aW9uID0gXCJcIikgPT4ge1xuICAgIHJldHVybiBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwicFwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJyZXN0YXVyYW50X19kZXNjcmlwdGlvblwiLCBcInRleHQtYm9keVwiXSxcbiAgICAgICAgY29udGVudHM6IGRlc2NyaXB0aW9uLFxuICAgIH0pO1xufTtcbmV4cG9ydCBjb25zdCBjcmVhdGVMaW5rRGl2ID0gKGxpbmsgPSBcIlwiKSA9PiB7XG4gICAgY29uc3QgZGl2ID0gY3JlYXRlRWxlbWVudEJ5VGFnKHtcbiAgICAgICAgdGFnOiBcImRpdlwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJyZXN0YXVyYW50X19saW5rXCIsIFwidGV4dC1ib2R5XCJdLFxuICAgIH0pO1xuICAgIGNvbnN0IGFUYWcgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwiYVwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJyZXN0YXVyYW50X19saW5rXCIsIFwidGV4dC1ib2R5XCJdLFxuICAgICAgICBjb250ZW50czogbGluayxcbiAgICAgICAgYXR0cmlidXRlOiB7IGhyZWY6IGxpbmssIHRhcmdldDogXCJfYmxhbmtfXCIgfSxcbiAgICB9KTtcbiAgICBkaXYuYXBwZW5kKGFUYWcpO1xuICAgIHJldHVybiBkaXY7XG59O1xuY29uc3QgY3JlYXRlSW5mb0RpdiA9ICh7IG5hbWUsIGRpc3RhbmNlLCBkZXNjcmlwdGlvbiA9IFwiXCIsIH0pID0+IHtcbiAgICBjb25zdCBkaXYgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwiZGl2XCIsXG4gICAgICAgIGNsYXNzZXM6IFtcInJlc3RhdXJhbnRfX2luZm9cIl0sXG4gICAgfSk7XG4gICAgY29uc3QgbmFtZUgzID0gY3JlYXRlTmFtZUgzVGFnKG5hbWUpO1xuICAgIGNvbnN0IGRpc3RhbmNlU3BhbiA9IGNyZWF0ZURpc3RhbmNlU3BhbihkaXN0YW5jZSk7XG4gICAgY29uc3QgZGVzY3JpcHRpb25QID0gY3JlYXRlRGVzY3JpcHRpb25QVGFnKGRlc2NyaXB0aW9uKTtcbiAgICBkaXYuYXBwZW5kKG5hbWVIMywgZGlzdGFuY2VTcGFuLCBkZXNjcmlwdGlvblApO1xuICAgIHJldHVybiBkaXY7XG59O1xuY29uc3QgZ2VuZXJhdGVSZXN0YXVyYW50SXRlbSA9ICh7IGNhdGVnb3J5LCBuYW1lLCBkaXN0YW5jZSwgZGVzY3JpcHRpb24sIGZhdm9yaXRlcywgbGluaywgfSkgPT4ge1xuICAgIGNvbnN0IGxpID0gY3JlYXRlRWxlbWVudEJ5VGFnKHtcbiAgICAgICAgdGFnOiBcImxpXCIsXG4gICAgICAgIGNsYXNzZXM6IFtcInJlc3RhdXJhbnRcIl0sXG4gICAgICAgIGF0dHJpYnV0ZTogeyBuYW1lOiBuYW1lIH0sXG4gICAgfSk7XG4gICAgY29uc3QgY2F0ZWdvcnlEaXYgPSBjcmVhdGVDYXRlZ29yeURpdihjYXRlZ29yeSk7XG4gICAgY29uc3QgaW5mb0RpdiA9IGNyZWF0ZUluZm9EaXYoeyBuYW1lLCBkaXN0YW5jZSwgZGVzY3JpcHRpb24gfSk7XG4gICAgY29uc3QgZmF2b3JpdGVzQnV0dG9uID0gZ2VuZXJhdGVGYXZvcml0ZUJ1dHRvbih7XG4gICAgICAgIGlzRmF2b3JpdGVzOiBmYXZvcml0ZXMsXG4gICAgICAgIHJlc3RhdXJhbnROYW1lOiBuYW1lLFxuICAgIH0pO1xuICAgIGxpLmFwcGVuZChjYXRlZ29yeURpdiwgaW5mb0RpdiwgZmF2b3JpdGVzQnV0dG9uKTtcbiAgICByZXR1cm4gbGk7XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVSZXN0YXVyYW50SXRlbTtcbiIsImltcG9ydCBBbGxSZXN0YXVyYW50TGlzdCwgeyBkZWxldGVSZXN0YXVyYW50LCB9IGZyb20gXCIuLi8uLi8uLi9kb21haW4vQWxsUmVzdGF1cmFudExpc3RcIjtcbmltcG9ydCB7IGNyZWF0ZUNhdGVnb3J5RGl2LCBjcmVhdGVEZXNjcmlwdGlvblBUYWcsIGNyZWF0ZURpc3RhbmNlU3BhbiwgY3JlYXRlTGlua0RpdiwgY3JlYXRlTmFtZUgzVGFnLCB9IGZyb20gXCIuLi9nZW5lcmF0ZVJlc3RhdXJhbnRJdGVtXCI7XG5pbXBvcnQgTW9kYWwgZnJvbSBcIi4vTW9kYWxcIjtcbmltcG9ydCBSZXN0YXVyYW50TGlzdCBmcm9tIFwiLi4vLi4vLi4vZG9tYWluL1Jlc3RhdXJhbnRMaXN0XCI7XG5pbXBvcnQgY3JlYXRlRWxlbWVudEJ5VGFnIGZyb20gXCIuLi8uLi91dGlscy9jcmVhdGVFbGVtZW50QnlUYWdcIjtcbmltcG9ydCBnZW5lcmF0ZUZhdm9yaXRlQnV0dG9uIGZyb20gXCIuLi9CdXR0b24vZ2VuZXJhdGVGYXZvcml0ZXNCdXR0b25cIjtcbmltcG9ydCBnZW5lcmF0ZVByaW1hcnlCdXR0b24gZnJvbSBcIi4uL0J1dHRvbi9nZW5lcmF0ZVByaW1hcnlCdXR0b25cIjtcbmltcG9ydCBnZW5lcmF0ZVNlY29uZGFyeUJ1dHRvbiBmcm9tIFwiLi4vQnV0dG9uL2dlbmVyYXRlU2Vjb25kYXJ5QnV0dG9uXCI7XG5pbXBvcnQgeyByZW5kZXJGaWx0ZXJlZENvbnRhaW5lciB9IGZyb20gXCIuLi8uLi8uLlwiO1xuY2xhc3MgUmVzdGF1cmFudERldGFpbE1vZGFsIGV4dGVuZHMgTW9kYWwge1xuICAgIGNvbnN0cnVjdG9yKHJlc3RhdXJhbnQpIHtcbiAgICAgICAgc3VwZXIoRGV0YWlsTW9kYWxDaGlsZHJlbihyZXN0YXVyYW50KSk7XG4gICAgfVxufVxuY29uc3QgRGV0YWlsTW9kYWxDaGlsZHJlbiA9IChyZXN0YXVyYW50KSA9PiB7XG4gICAgY29uc3QgeyBjYXRlZ29yeSwgbmFtZSwgZGlzdGFuY2UsIGRlc2NyaXB0aW9uLCBsaW5rLCBmYXZvcml0ZXMgfSA9IHJlc3RhdXJhbnQ7XG4gICAgY29uc3QgY2F0ZWdvcnlEaXYgPSBjcmVhdGVDYXRlZ29yeURpdihjYXRlZ29yeSk7XG4gICAgY29uc3QgbmFtZUgzID0gY3JlYXRlTmFtZUgzVGFnKG5hbWUpO1xuICAgIGNvbnN0IGRpc3RhbmNlU3BhbiA9IGNyZWF0ZURpc3RhbmNlU3BhbihkaXN0YW5jZSk7XG4gICAgY29uc3QgZGVzY3JpcHRpb25QID0gY3JlYXRlRGVzY3JpcHRpb25QVGFnKGRlc2NyaXB0aW9uKTtcbiAgICBjb25zdCBsaW5rRGl2ID0gY3JlYXRlTGlua0RpdihsaW5rKTtcbiAgICBjb25zdCBmYXZvcml0ZXNCdXR0b24gPSBnZW5lcmF0ZUZhdm9yaXRlQnV0dG9uKHtcbiAgICAgICAgaXNGYXZvcml0ZXM6IGZhdm9yaXRlcyxcbiAgICAgICAgcmVzdGF1cmFudE5hbWU6IG5hbWUsXG4gICAgICAgIG9uQ2xpY2tIYW5kbGVyOiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXN0YXVyYW50Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXN0YXVyYW50LWxpc3QtY29udGFpbmVyXCIpO1xuICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudExpc3QgPSByZXN0YXVyYW50Q29udGFpbmVyPy5nZXRBdHRyaWJ1dGUoXCJpZFwiKSA9PT1cbiAgICAgICAgICAgICAgICBcInJlc3RhdXJhbnQtYWxsLWxpc3QtY29udGFpbmVyXCJcbiAgICAgICAgICAgICAgICA/IEFsbFJlc3RhdXJhbnRMaXN0XG4gICAgICAgICAgICAgICAgOiBuZXcgUmVzdGF1cmFudExpc3QoQWxsUmVzdGF1cmFudExpc3Qud2l0aEZhdm9yaXRlcygpKTtcbiAgICAgICAgICAgIHJlbmRlckZpbHRlcmVkQ29udGFpbmVyKHJlc3RhdXJhbnRDb250YWluZXIsIHJlc3RhdXJhbnRMaXN0KTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCByZXN0YXVyYW50SW5mb0RpdiA9IGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJkaXZcIixcbiAgICAgICAgY2xhc3NlczogW1wicmVzdGF1cmFudF9fZGV0YWlsXCJdLFxuICAgICAgICBhdHRyaWJ1dGU6IHsgbmFtZTogbmFtZSB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGNhdGVnb3J5QW5kRmF2b3JpdGVEaXYgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwiZGl2XCIsXG4gICAgICAgIGNsYXNzZXM6IFtcInJlc3RhdXJhbnRfX2RldGFpbF9fY2F0ZWdvcnlfYW5kX2Zhdm9yaXRlXCJdLFxuICAgIH0pO1xuICAgIGNhdGVnb3J5QW5kRmF2b3JpdGVEaXYuYXBwZW5kKGNhdGVnb3J5RGl2LCBmYXZvcml0ZXNCdXR0b24pO1xuICAgIHJlc3RhdXJhbnRJbmZvRGl2LmFwcGVuZChjYXRlZ29yeUFuZEZhdm9yaXRlRGl2LCBuYW1lSDMsIGRpc3RhbmNlU3BhbiwgZGVzY3JpcHRpb25QLCBsaW5rRGl2KTtcbiAgICBjb25zdCBidXR0b25EaXYgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwiZGl2XCIsXG4gICAgICAgIGNsYXNzZXM6IFtcImJ1dHRvbi1jb250YWluZXJcIl0sXG4gICAgfSk7XG4gICAgY29uc3QgZGVsZXRlQnV0dG9uID0gZ2VuZXJhdGVTZWNvbmRhcnlCdXR0b24oe1xuICAgICAgICB2YWx1ZTogXCLsgq3soJztlZjquLBcIixcbiAgICAgICAgb25DbGlja0hhbmRsZXI6IChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZS50YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3RhdXJhbnRJbmZvRGl2ID0gZS50YXJnZXQuY2xvc2VzdChcIi5tb2RhbC1jb250YWluZXJcIik/LmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3RhdXJhbnRJbmZvRGl2IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IHJlc3RhdXJhbnRJbmZvRGl2LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiW0VSUk9SXSBuYW1lIGlzIGludmFsaWRcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5jb25maXJtKFwi7J20IOydjOyLneygkOydhCDsoJXrp5Ag7IKt7KCc7ZWY7Iuc6rKg7Iq164uI6rmMP1wiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlUmVzdGF1cmFudChuYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN0YXVyYW50Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5yZXN0YXVyYW50LWxpc3QtY29udGFpbmVyXCIpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN0YXVyYW50TGlzdCA9IHJlc3RhdXJhbnRDb250YWluZXI/LmdldEF0dHJpYnV0ZShcImlkXCIpID09PVxuICAgICAgICAgICAgICAgICAgICAgICAgXCJyZXN0YXVyYW50LWFsbC1saXN0LWNvbnRhaW5lclwiXG4gICAgICAgICAgICAgICAgICAgICAgICA/IEFsbFJlc3RhdXJhbnRMaXN0XG4gICAgICAgICAgICAgICAgICAgICAgICA6IG5ldyBSZXN0YXVyYW50TGlzdChBbGxSZXN0YXVyYW50TGlzdC53aXRoRmF2b3JpdGVzKCkpO1xuICAgICAgICAgICAgICAgICAgICByZW5kZXJGaWx0ZXJlZENvbnRhaW5lcihyZXN0YXVyYW50Q29udGFpbmVyLCByZXN0YXVyYW50TGlzdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGUudGFyZ2V0LmNsb3Nlc3QoXCIubW9kYWxcIik/LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbC0tb3BlblwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCBjbG9zZUJ1dHRvbiA9IGdlbmVyYXRlUHJpbWFyeUJ1dHRvbih7XG4gICAgICAgIHZhbHVlOiBcIuuLq+q4sFwiLFxuICAgICAgICBvbkNsaWNrSGFuZGxlcjogKGUpID0+IHtcbiAgICAgICAgICAgIGlmIChlLnRhcmdldCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgZS50YXJnZXQuY2xvc2VzdChcIi5tb2RhbFwiKT8uY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsLS1vcGVuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGJ1dHRvbkRpdi5hcHBlbmQoZGVsZXRlQnV0dG9uLCBjbG9zZUJ1dHRvbik7XG4gICAgcmV0dXJuIFtyZXN0YXVyYW50SW5mb0RpdiwgYnV0dG9uRGl2XTtcbn07XG5leHBvcnQgZGVmYXVsdCBSZXN0YXVyYW50RGV0YWlsTW9kYWw7XG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfUmVzdGF1cmFudExpc3RUYWJfaW5zdGFuY2VzLCBfUmVzdGF1cmFudExpc3RUYWJfZ2VuZXJhdGVUYWJNZW51LCBfUmVzdGF1cmFudExpc3RUYWJfc2VjdGlvbnNGb3JBbGxMaXN0LCBfUmVzdGF1cmFudExpc3RUYWJfc2VjdGlvbnNGb3JGYXZvcml0ZUxpc3QsIF9SZXN0YXVyYW50TGlzdFRhYl9zdHlsZWRDdXJyZW50VGFiLCBfUmVzdGF1cmFudExpc3RUYWJfaGFuZGxlQ3VycmVudFRhYkNsYXNzTmFtZTtcbmltcG9ydCBnZW5lcmF0ZVRhYiwgeyBUQUJfSURfUFJFRklYIH0gZnJvbSBcIi4vZ2VuZXJhdGVUYWJcIjtcbmltcG9ydCBSZXN0YXVyYW50RGV0YWlsTW9kYWwgZnJvbSBcIi4uL01vZGFsL1Jlc3RhdXJhbnREZXRhaWxNb2RhbFwiO1xuaW1wb3J0IGNyZWF0ZUVsZW1lbnRCeVRhZyBmcm9tIFwiLi4vLi4vdXRpbHMvY3JlYXRlRWxlbWVudEJ5VGFnXCI7XG5pbXBvcnQgeyBnZXRSZXN0YXVyYW50IH0gZnJvbSBcIi4uLy4uLy4uL2RvbWFpbi9BbGxSZXN0YXVyYW50TGlzdFwiO1xuY2xhc3MgUmVzdGF1cmFudExpc3RUYWIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBfUmVzdGF1cmFudExpc3RUYWJfaW5zdGFuY2VzLmFkZCh0aGlzKTtcbiAgICAgICAgdGhpcy50YWJFbGVtZW50ID0gZ2VuZXJhdGVUYWIoe1xuICAgICAgICAgICAgdGFiTWVudTogX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudExpc3RUYWJfaW5zdGFuY2VzLCBcIm1cIiwgX1Jlc3RhdXJhbnRMaXN0VGFiX2dlbmVyYXRlVGFiTWVudSkuY2FsbCh0aGlzKSxcbiAgICAgICAgICAgIGNvbnRlbnRzQXJlYTogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXN0YXVyYW50cy1jb250YWluZXJcIiksXG4gICAgICAgIH0pO1xuICAgICAgICBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9SZXN0YXVyYW50TGlzdFRhYl9pbnN0YW5jZXMsIFwibVwiLCBfUmVzdGF1cmFudExpc3RUYWJfc3R5bGVkQ3VycmVudFRhYikuY2FsbCh0aGlzKTtcbiAgICB9XG59XG5fUmVzdGF1cmFudExpc3RUYWJfaW5zdGFuY2VzID0gbmV3IFdlYWtTZXQoKSwgX1Jlc3RhdXJhbnRMaXN0VGFiX2dlbmVyYXRlVGFiTWVudSA9IGZ1bmN0aW9uIF9SZXN0YXVyYW50TGlzdFRhYl9nZW5lcmF0ZVRhYk1lbnUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgXCLrqqjrk6Ag7J2M7Iud7KCQXCI6IF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc3RhdXJhbnRMaXN0VGFiX2luc3RhbmNlcywgXCJtXCIsIF9SZXN0YXVyYW50TGlzdFRhYl9zZWN0aW9uc0ZvckFsbExpc3QpLmNhbGwodGhpcyksXG4gICAgICAgIFwi7J6Q7KO8IOqwgOuKlCDsnYzsi53soJBcIjogX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudExpc3RUYWJfaW5zdGFuY2VzLCBcIm1cIiwgX1Jlc3RhdXJhbnRMaXN0VGFiX3NlY3Rpb25zRm9yRmF2b3JpdGVMaXN0KS5jYWxsKHRoaXMpLFxuICAgIH07XG59LCBfUmVzdGF1cmFudExpc3RUYWJfc2VjdGlvbnNGb3JBbGxMaXN0ID0gZnVuY3Rpb24gX1Jlc3RhdXJhbnRMaXN0VGFiX3NlY3Rpb25zRm9yQWxsTGlzdCgpIHtcbiAgICBjb25zdCBmaWx0ZXJDb250YWluZXIgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwic2VjdGlvblwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJyZXN0YXVyYW50LWZpbHRlci1jb250YWluZXJcIl0sXG4gICAgICAgIGF0dHJpYnV0ZTogeyBpZDogXCJmaWx0ZXItY29udGFpbmVyXCIgfSxcbiAgICB9KTtcbiAgICBjb25zdCByZXN0YXVyYW50TGlzdENvbnRhaW5lciA9IGNyZWF0ZUVsZW1lbnRCeVRhZyh7XG4gICAgICAgIHRhZzogXCJzZWN0aW9uXCIsXG4gICAgICAgIGNsYXNzZXM6IFtcInJlc3RhdXJhbnQtbGlzdC1jb250YWluZXJcIl0sXG4gICAgICAgIGF0dHJpYnV0ZTogeyBpZDogXCJyZXN0YXVyYW50LWFsbC1saXN0LWNvbnRhaW5lclwiIH0sXG4gICAgfSk7XG4gICAgcmVzdGF1cmFudExpc3RDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2tIYW5kbGUpO1xuICAgIHJldHVybiBbZmlsdGVyQ29udGFpbmVyLCByZXN0YXVyYW50TGlzdENvbnRhaW5lcl07XG59LCBfUmVzdGF1cmFudExpc3RUYWJfc2VjdGlvbnNGb3JGYXZvcml0ZUxpc3QgPSBmdW5jdGlvbiBfUmVzdGF1cmFudExpc3RUYWJfc2VjdGlvbnNGb3JGYXZvcml0ZUxpc3QoKSB7XG4gICAgY29uc3QgcmVzdGF1cmFudExpc3RDb250YWluZXIgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwic2VjdGlvblwiLFxuICAgICAgICBjbGFzc2VzOiBbXCJyZXN0YXVyYW50LWxpc3QtY29udGFpbmVyXCJdLFxuICAgICAgICBhdHRyaWJ1dGU6IHsgaWQ6IFwicmVzdGF1cmFudC1mYXZvcml0ZS1saXN0LWNvbnRhaW5lclwiIH0sXG4gICAgfSk7XG4gICAgcmVzdGF1cmFudExpc3RDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2tIYW5kbGUpO1xuICAgIHJldHVybiBbcmVzdGF1cmFudExpc3RDb250YWluZXJdO1xufSwgX1Jlc3RhdXJhbnRMaXN0VGFiX3N0eWxlZEN1cnJlbnRUYWIgPSBmdW5jdGlvbiBfUmVzdGF1cmFudExpc3RUYWJfc3R5bGVkQ3VycmVudFRhYigpIHtcbiAgICBjb25zdCBjdXJyZW50VGFiID0gdGhpcy50YWJFbGVtZW50LmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO1xuICAgIGNvbnN0IHRhYkJ1dHRvbiA9IHRoaXMudGFiRWxlbWVudC5maXJzdENoaWxkO1xuICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc3RhdXJhbnRMaXN0VGFiX2luc3RhbmNlcywgXCJtXCIsIF9SZXN0YXVyYW50TGlzdFRhYl9oYW5kbGVDdXJyZW50VGFiQ2xhc3NOYW1lKS5jYWxsKHRoaXMsIGN1cnJlbnRUYWIsIHRhYkJ1dHRvbik7XG4gICAgdGhpcy50YWJFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgICBpZiAoIShlLmN1cnJlbnRUYXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCAmJlxuICAgICAgICAgICAgZS50YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIltFUlJPUl9JTl9zdHlsZWRDdXJyZW50VGFiXSBJbnZhbGlkIGUuY3VycmVudFRhcmdldCBPciBlLnRhcmdldFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjdXJyZW50VGFiID0gZS5jdXJyZW50VGFyZ2V0LmdldEF0dHJpYnV0ZShcInZhbHVlXCIpO1xuICAgICAgICBlLmN1cnJlbnRUYXJnZXQuY2hpbGROb2Rlcy5mb3JFYWNoKCh0YWJCdXR0b24pID0+IHtcbiAgICAgICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX1Jlc3RhdXJhbnRMaXN0VGFiX2luc3RhbmNlcywgXCJtXCIsIF9SZXN0YXVyYW50TGlzdFRhYl9oYW5kbGVDdXJyZW50VGFiQ2xhc3NOYW1lKS5jYWxsKHRoaXMsIGN1cnJlbnRUYWIsIHRhYkJ1dHRvbik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSwgX1Jlc3RhdXJhbnRMaXN0VGFiX2hhbmRsZUN1cnJlbnRUYWJDbGFzc05hbWUgPSBmdW5jdGlvbiBfUmVzdGF1cmFudExpc3RUYWJfaGFuZGxlQ3VycmVudFRhYkNsYXNzTmFtZShjdXJyZW50VGFiLCB0YWJCdXR0b24pIHtcbiAgICBpZiAoY3VycmVudFRhYiA9PT0gdGFiQnV0dG9uLmlkLnNsaWNlKFRBQl9JRF9QUkVGSVgubGVuZ3RoKSkge1xuICAgICAgICB0YWJCdXR0b24uY2xhc3NMaXN0LmFkZChcImN1cnJlbnRUYWJcIik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGFiQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjdXJyZW50VGFiXCIpO1xufTtcbmNvbnN0IG9uQ2xpY2tIYW5kbGUgPSAoZSkgPT4ge1xuICAgIGlmIChlLnRhcmdldCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICYmXG4gICAgICAgICEoZS50YXJnZXQucGFyZW50RWxlbWVudCBpbnN0YW5jZW9mIEhUTUxCdXR0b25FbGVtZW50KSkge1xuICAgICAgICBjb25zdCByZXN0YXVyYW50TmFtZSA9IGUudGFyZ2V0LmNsb3Nlc3QoXCJsaVwiKT8uZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcbiAgICAgICAgaWYgKCFyZXN0YXVyYW50TmFtZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiW0VSUk9SX0lOX1Jlc3RhdXJhbnRMaXN0VGFiX29uQ2xpY2tIYW5kbGVdXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRldGFpbCA9IGdldFJlc3RhdXJhbnQocmVzdGF1cmFudE5hbWUpO1xuICAgICAgICBjb25zdCBkZXRhaWxNb2RhbCA9IG5ldyBSZXN0YXVyYW50RGV0YWlsTW9kYWwoZGV0YWlsKTtcbiAgICAgICAgZG9jdW1lbnRcbiAgICAgICAgICAgIC5nZXRFbGVtZW50QnlJZChcInJlc3RhdXJhbnQtZGV0YWlsLW1vZGFsLWNvbnRhaW5lclwiKVxuICAgICAgICAgICAgPy5yZXBsYWNlQ2hpbGRyZW4oZGV0YWlsTW9kYWwuZWxlbWVudCk7XG4gICAgICAgIGRldGFpbE1vZGFsLnRvZ2dsZSgpO1xuICAgIH1cbn07XG5leHBvcnQgZGVmYXVsdCBSZXN0YXVyYW50TGlzdFRhYjtcbiIsImltcG9ydCBjcmVhdGVFbGVtZW50QnlUYWcgZnJvbSBcIi4uL3V0aWxzL2NyZWF0ZUVsZW1lbnRCeVRhZ1wiO1xuaW1wb3J0IGdlbmVyYXRlUmVzdGF1cmFudEl0ZW0gZnJvbSBcIi4vZ2VuZXJhdGVSZXN0YXVyYW50SXRlbVwiO1xuY29uc3QgZ2VuZXJhdGVSZXN0YXVyYW50TGlzdCA9ICh7IHJlc3RhdXJhbnRMaXN0LCBjYXRlZ29yeSwgc29ydFN0YW5kYXJkLCB9KSA9PiB7XG4gICAgY29uc3QgdWwgPSBjcmVhdGVFbGVtZW50QnlUYWcoe1xuICAgICAgICB0YWc6IFwidWxcIixcbiAgICAgICAgY2xhc3NlczogW1wicmVzdGF1cmFudC1saXN0XCJdLFxuICAgIH0pO1xuICAgIGNvbnN0IHJlc3RhdXJhbnRJdGVtcyA9IHJlc3RhdXJhbnRMaXN0XG4gICAgICAgIC5nZXRPcmRlcmVkUmVzdGF1cmFudCh7XG4gICAgICAgIGNhdGVnb3J5LFxuICAgICAgICBzb3J0U3RhbmRhcmQsXG4gICAgfSlcbiAgICAgICAgLm1hcCgocmVzdGF1cmFudCkgPT4ge1xuICAgICAgICByZXR1cm4gZ2VuZXJhdGVSZXN0YXVyYW50SXRlbShyZXN0YXVyYW50KTtcbiAgICB9KTtcbiAgICB1bC5hcHBlbmQoLi4ucmVzdGF1cmFudEl0ZW1zKTtcbiAgICByZXR1cm4gdWw7XG59O1xuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVSZXN0YXVyYW50TGlzdDtcbiIsImltcG9ydCBcIi4uL3RlbXBsYXRlcy9zdHlsZS5jc3NcIjtcbmltcG9ydCBcIi4vaW1hZ2UvYWRkLWJ1dHRvbi5wbmdcIjtcbmltcG9ydCBBbGxSZXN0YXVyYW50TGlzdCwgeyBwb3N0UmVzdGF1cmFudCB9IGZyb20gXCIuL2RvbWFpbi9BbGxSZXN0YXVyYW50TGlzdFwiO1xuaW1wb3J0IHsgQ0FURUdPUllfV0lUSF9FTlRJUkUsIFNPUlRfU1RBTkRBUkQgfSBmcm9tIFwiLi9jb25zdGFudHMvc2VsZWN0T3B0aW9uc1wiO1xuaW1wb3J0IEFkZGluZ1Jlc3RhdXJhbnRNb2RhbCBmcm9tIFwiLi92aWV3L2NvbXBvbmVudHMvTW9kYWwvQWRkaW5nUmVzdGF1cmFudE1vZGFsXCI7XG5pbXBvcnQgUmVzdGF1cmFudExpc3QgZnJvbSBcIi4vZG9tYWluL1Jlc3RhdXJhbnRMaXN0XCI7XG5pbXBvcnQgUmVzdGF1cmFudExpc3RUYWIgZnJvbSBcIi4vdmlldy9jb21wb25lbnRzL1RhYi9SZXN0YXVyYW50TGlzdFRhYlwiO1xuaW1wb3J0IGdlbmVyYXRlUmVzdGF1cmFudExpc3QgZnJvbSBcIi4vdmlldy9jb21wb25lbnRzL2dlbmVyYXRlUmVzdGF1cmFudExpc3RcIjtcbmltcG9ydCBnZW5lcmF0ZVNlbGVjdEJveCBmcm9tIFwiLi92aWV3L2NvbXBvbmVudHMvUmVhZGFibGVFbGVtZW50L2dlbmVyYXRlU2VsZWN0Qm94XCI7XG5pbXBvcnQgZ2V0TG9jYWxTdG9yYWdlSXRlbSBmcm9tIFwiLi91dGlscy9nZXRMb2NhbFN0b3JhZ2VJdGVtXCI7XG5pbXBvcnQgeyByZXN0YXVyYW50RGF0YSB9IGZyb20gXCIuL2RhdGEvcmVzdGF1cmFudERhdGFcIjtcbi8vIOydjOyLneygkCDsiqTthYEg642w7J207YSw66GcIEFsbFJlc3RhdXJhbnRMaXN0IOyEpOyglVxuY29uc3QgcmVzdGF1cmFudHMgPSBnZXRMb2NhbFN0b3JhZ2VJdGVtKFwiYWxsUmVzdGF1cmFudHNcIiwgcmVzdGF1cmFudERhdGEpO1xuQWxsUmVzdGF1cmFudExpc3QuaW5pdChyZXN0YXVyYW50cyA/PyBbXSk7XG4vLyDsnYzsi53soJAg7LaU6rCAIOuqqOuLrCDstpTqsIBcbmNvbnN0IG9wZW5CdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZC1yZXN0YXVyYW50LWJ1dHRvblwiKTtcbmNvbnN0IGFkZGluZ01vZGFsQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGRpbmctcmVzdGF1cmFudC1tb2RhbC1jb250YWluZXJcIik7XG5jb25zdCBhZGRNb2RhbCA9IG5ldyBBZGRpbmdSZXN0YXVyYW50TW9kYWwoKTtcbmFkZGluZ01vZGFsQ29udGFpbmVyLmFwcGVuZChhZGRNb2RhbC5lbGVtZW50KTtcbi8vIOuqqOuToCDsnYzsi53soJAt7J6Q7KO8IOqwgOuKlCDsnYzsi53soJAg7YOtIOy2lOqwgFxuY29uc3QgdGFiQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0YWItY29udGFpbmVyXCIpO1xuY29uc3QgdGFiID0gbmV3IFJlc3RhdXJhbnRMaXN0VGFiKCkudGFiRWxlbWVudDtcbnRhYkNvbnRhaW5lci5hcHBlbmRDaGlsZCh0YWIpO1xuLy8g66qo65OgIOydjOyLneygkCDtg60g64K067aAIGZpbHRlciDstpTqsIBcbmNvbnN0IGZpbHRlckNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmlsdGVyLWNvbnRhaW5lclwiKTtcbmNvbnN0IGNhdGVnb3J5U2VsZWN0Qm94ID0gZ2VuZXJhdGVTZWxlY3RCb3goe1xuICAgIG9wdGlvbnM6IENBVEVHT1JZX1dJVEhfRU5USVJFLFxuICAgIG5hbWU6IFwiY2F0ZWdvcnlcIixcbn0pO1xuY29uc3Qgc29ydFN0YW5kYXJkU2VsZWN0Qm94ID0gZ2VuZXJhdGVTZWxlY3RCb3goe1xuICAgIG9wdGlvbnM6IFNPUlRfU1RBTkRBUkQsXG4gICAgbmFtZTogXCJzb3J0aW5nXCIsXG59KTtcbmZpbHRlckNvbnRhaW5lci5hcHBlbmQoY2F0ZWdvcnlTZWxlY3RCb3gsIHNvcnRTdGFuZGFyZFNlbGVjdEJveCk7XG4vLyDrqqjrk6Ag7J2M7Iud7KCQIO2DrSDrgrTrtoAg7J2M7Iud7KCQIOuqqeuhnSDstpTqsIBcbmNvbnN0IHJlc3RhdXJhbnRBbGxMaXN0Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXN0YXVyYW50LWFsbC1saXN0LWNvbnRhaW5lclwiKTtcbmNvbnN0IHJlc3RhdXJhbnRMaXN0ID0gZ2VuZXJhdGVSZXN0YXVyYW50TGlzdCh7XG4gICAgcmVzdGF1cmFudExpc3Q6IEFsbFJlc3RhdXJhbnRMaXN0LFxuICAgIGNhdGVnb3J5OiBDQVRFR09SWV9XSVRIX0VOVElSRVswXSxcbiAgICBzb3J0U3RhbmRhcmQ6IFNPUlRfU1RBTkRBUkRbMF0sXG59KTtcbnJlc3RhdXJhbnRBbGxMaXN0Q29udGFpbmVyLmFwcGVuZChyZXN0YXVyYW50TGlzdCk7XG4vL+ydtOuypO2KuCDrpqzsiqTrhIgg65Ox66GdXG5vcGVuQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgYWRkTW9kYWwudG9nZ2xlKCk7XG59KTtcbnRhYi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGlmICh0YWIuZ2V0QXR0cmlidXRlKFwidmFsdWVcIikgPT09IFwi66qo65OgIOydjOyLneygkFwiKSB7XG4gICAgICAgIHJlbmRlckZpbHRlcmVkQ29udGFpbmVyKHJlc3RhdXJhbnRBbGxMaXN0Q29udGFpbmVyLCBBbGxSZXN0YXVyYW50TGlzdCk7XG4gICAgfVxuICAgIGlmICh0YWIuZ2V0QXR0cmlidXRlKFwidmFsdWVcIikgPT09IFwi7J6Q7KO8IOqwgOuKlCDsnYzsi53soJBcIikge1xuICAgICAgICBjb25zdCByZXN0YXVyYW50RmF2b3JpdGVMaXN0Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXN0YXVyYW50LWZhdm9yaXRlLWxpc3QtY29udGFpbmVyXCIpO1xuICAgICAgICBpZiAocmVzdGF1cmFudEZhdm9yaXRlTGlzdENvbnRhaW5lcikge1xuICAgICAgICAgICAgY29uc3QgdWwgPSBnZW5lcmF0ZVJlc3RhdXJhbnRMaXN0KHtcbiAgICAgICAgICAgICAgICByZXN0YXVyYW50TGlzdDogbmV3IFJlc3RhdXJhbnRMaXN0KEFsbFJlc3RhdXJhbnRMaXN0LndpdGhGYXZvcml0ZXMoKSksXG4gICAgICAgICAgICAgICAgY2F0ZWdvcnk6IENBVEVHT1JZX1dJVEhfRU5USVJFWzBdLFxuICAgICAgICAgICAgICAgIHNvcnRTdGFuZGFyZDogU09SVF9TVEFOREFSRFswXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzdGF1cmFudEZhdm9yaXRlTGlzdENvbnRhaW5lci5yZXBsYWNlQ2hpbGRyZW4odWwpO1xuICAgICAgICB9XG4gICAgfVxufSk7XG5maWx0ZXJDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoKSA9PiB7XG4gICAgcmVuZGVyRmlsdGVyZWRDb250YWluZXIocmVzdGF1cmFudEFsbExpc3RDb250YWluZXIsIEFsbFJlc3RhdXJhbnRMaXN0KTtcbn0pO1xuYWRkaW5nTW9kYWxDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBuYW1lID0gZS50YXJnZXRbXCJuYW1lXCJdLnZhbHVlO1xuICAgIGNvbnN0IGNhdGVnb3J5ID0gZS50YXJnZXRbXCJjYXRlZ29yeVwiXS52YWx1ZTtcbiAgICBjb25zdCBkaXN0YW5jZSA9IGUudGFyZ2V0W1wiZGlzdGFuY2VcIl0udmFsdWU7XG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSBlLnRhcmdldFtcImRlc2NyaXB0aW9uXCJdLnZhbHVlO1xuICAgIGNvbnN0IGxpbmsgPSBlLnRhcmdldFtcImxpbmtcIl0udmFsdWU7XG4gICAgY29uc3QgZmF2b3JpdGVzID0gZmFsc2U7XG4gICAgYWRkTW9kYWwudG9nZ2xlKCk7XG4gICAgcG9zdFJlc3RhdXJhbnQoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBjYXRlZ29yeSxcbiAgICAgICAgZGlzdGFuY2UsXG4gICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICBsaW5rLFxuICAgICAgICBmYXZvcml0ZXMsXG4gICAgfSk7XG4gICAgcmVuZGVyRmlsdGVyZWRDb250YWluZXIocmVzdGF1cmFudEFsbExpc3RDb250YWluZXIsIEFsbFJlc3RhdXJhbnRMaXN0KTtcbn0pO1xuZXhwb3J0IGNvbnN0IHJlbmRlckZpbHRlcmVkQ29udGFpbmVyID0gKHJlc3RhdXJhbnRMaXN0Q29udGFpbmVyLCByZXN0YXVyYW50TGlzdCkgPT4ge1xuICAgIGNvbnN0IGZpbHRlcmVkTGlzdCA9IGdlbmVyYXRlUmVzdGF1cmFudExpc3Qoe1xuICAgICAgICByZXN0YXVyYW50TGlzdDogcmVzdGF1cmFudExpc3QsXG4gICAgICAgIGNhdGVnb3J5OiBjYXRlZ29yeVNlbGVjdEJveC52YWx1ZSxcbiAgICAgICAgc29ydFN0YW5kYXJkOiBzb3J0U3RhbmRhcmRTZWxlY3RCb3gudmFsdWUsXG4gICAgfSk7XG4gICAgcmVzdGF1cmFudExpc3RDb250YWluZXIucmVwbGFjZUNoaWxkcmVuKGZpbHRlcmVkTGlzdCk7XG59O1xuIiwiaW1wb3J0IHNldExvY2FsU3RvcmFnZUl0ZW0gZnJvbSBcIi4vc2V0TG9jYWxTdG9yYWdlSXRlbVwiO1xuY29uc3QgZ2V0TG9jYWxTdG9yYWdlSXRlbSA9IChrZXksIGRlZmF1bHRWYWx1ZSkgPT4ge1xuICAgIGNvbnN0IGxvY2FsU3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkgPT09IG51bGwpIHtcbiAgICAgICAgc2V0TG9jYWxTdG9yYWdlSXRlbShrZXksIGRlZmF1bHRWYWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IGdldExvY2FsU3RvcmFnZUl0ZW07XG4iLCJleHBvcnQgY29uc3QgcmVzdGF1cmFudERhdGEgPSBbXG4gICAge1xuICAgICAgICBjYXRlZ29yeTogXCLtlZzsi51cIixcbiAgICAgICAgbmFtZTogXCLrp5vsnojripTsvanrgpjrrLRcIixcbiAgICAgICAgZGlzdGFuY2U6IDE1LFxuICAgICAgICBkZXNjcmlwdGlvbjogXCLsi6DshKDtlZwg7J6s66OM66GcIOunjOuTnOuKlCDsoITthrUg7ZWc7IudIOyalOumrFwiLFxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vd3d3Lndvb3dhY291cnNlLmlvL1wiLFxuICAgICAgICBmYXZvcml0ZXM6IHRydWUsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNhdGVnb3J5OiBcIuykkeyLnVwiLFxuICAgICAgICBuYW1lOiBcIu2Zjey9qeuwmOygkFwiLFxuICAgICAgICBkaXN0YW5jZTogMjAsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIuygle2GtSDtmY3svakg7Iqk7YOA7J287J2YIOykkeq1rSDsmpTrpqxcIixcbiAgICAgICAgbGluazogXCJodHRwczovL3d3dy53b293YWNvdXJzZS5pby9cIixcbiAgICAgICAgZmF2b3JpdGVzOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY2F0ZWdvcnk6IFwi7J287IudXCIsXG4gICAgICAgIG5hbWU6IFwi64+E7L+E652866m0XCIsXG4gICAgICAgIGRpc3RhbmNlOiAzMCxcbiAgICAgICAgZGVzY3JpcHRpb246IFwi64+E7L+E7JeQ7IScIOyYqCDsoJXthrUg7J2867O4IOudvOuptCDsoITrrLjsoJBcIixcbiAgICAgICAgbGluazogXCJodHRwczovL3d3dy53b293YWNvdXJzZS5pby9cIixcbiAgICAgICAgZmF2b3JpdGVzOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY2F0ZWdvcnk6IFwi7JaR7IudXCIsXG4gICAgICAgIG5hbWU6IFwi7ZSE66CM7LmY67mMXCIsXG4gICAgICAgIGRpc3RhbmNlOiAxMCxcbiAgICAgICAgZGVzY3JpcHRpb246IFwi7ZSE656R7Iqk7J2YIOunm+ydhCDtkojsnYAg7JaR7IudIOugiOyKpO2GoOuekVwiLFxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vd3d3Lndvb3dhY291cnNlLmlvL1wiLFxuICAgICAgICBmYXZvcml0ZXM6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgICBjYXRlZ29yeTogXCLslYTsi5zslYhcIixcbiAgICAgICAgbmFtZTogXCLrsKnsvZXrp5vsp5FcIixcbiAgICAgICAgZGlzdGFuY2U6IDUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIuuwqey9leyXkOyEnCDsmKgg7JWE7Iuc7JWIIOyalOumrCDsoITrrLjsoJBcIixcbiAgICAgICAgbGluazogXCJodHRwczovL3d3dy53b293YWNvdXJzZS5pby9cIixcbiAgICAgICAgZmF2b3JpdGVzOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgY2F0ZWdvcnk6IFwi6riw7YOAXCIsXG4gICAgICAgIG5hbWU6IFwi7Iqk7Y6Y7J247YOA7YyM7IqkXCIsXG4gICAgICAgIGRpc3RhbmNlOiAxNSxcbiAgICAgICAgZGVzY3JpcHRpb246IFwi7Iqk7Y6Y7J24IO2SjeuvuOulvCDripDrgoQg7IiYIOyeiOuKlCDri6TslpHtlZwg7YOA7YyM7IqkXCIsXG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly93d3cud29vd2Fjb3Vyc2UuaW8vXCIsXG4gICAgICAgIGZhdm9yaXRlczogZmFsc2UsXG4gICAgfSxcbl07XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsIlNPUlRfU1RBTkRBUkQiLCJDQVRFR09SWSIsIkNBVEVHT1JZX1dJVEhfRU5USVJFIiwiRElTVEFOQ0UiLCJpc0tvcmVhbiIsImxldHRlciIsInRlc3QiLCJpc0VuZ2xpc2giLCJjb21wYXJlTGV0dGVyUHJpb3JpdHkiLCJiIiwibG9jYWxlQ29tcGFyZSIsInNlbnNpdGl2aXR5IiwiY29tcGFyZUVuZ2xpc2giLCJzb3J0IiwiX1Jlc3RhdXJhbnRMaXN0X2luc3RhbmNlcyIsIl9SZXN0YXVyYW50TGlzdF9yZXN0YXVyYW50cyIsIl9SZXN0YXVyYW50TGlzdF9zb3J0Q2FsbGJhY2siLCJfUmVzdGF1cmFudExpc3RfZmlsdGVyQnlDYXRlZ29yeSIsIl9fY2xhc3NQcml2YXRlRmllbGRHZXQiLCJyZWNlaXZlciIsInN0YXRlIiwia2luZCIsImYiLCJUeXBlRXJyb3IiLCJoYXMiLCJ2YWx1ZSIsIldlYWtNYXAiLCJXZWFrU2V0IiwiY2F0ZWdvcnkiLCJyZXN0YXVyYW50cyIsImNvbnZlcnRlZFJlc3RhdXJhbnRzIiwiZmlsdGVyIiwicmVzdGF1cmFudCIsImNvbnN0cnVjdG9yIiwiYWRkIiwic2V0IiwiTWFwIiwiYUxldHRlcnMiLCJiTGV0dGVycyIsImFMZXR0ZXIiLCJiTGV0dGVyIiwibmFtZSIsImRpc3RhbmNlIiwiaW5pdCIsInJlc3RhdXJhbnRFbnRyaWVzIiwiX19jbGFzc1ByaXZhdGVGaWVsZFNldCIsImRlbGV0ZSIsImJyaW5nUmVzdGF1cmFudEluZm8iLCJ1cGRhdGVGYXZvcml0ZXMiLCJyZXN0YXVyYW50VmFsdWUiLCJmYXZvcml0ZXNTdGF0ZSIsImZhdm9yaXRlcyIsIm5ld1Jlc3RhdXJhbnRWYWx1ZSIsIkFycmF5IiwiZnJvbSIsInZhbHVlcyIsIndpdGhGYXZvcml0ZXMiLCJnZXRPcmRlcmVkUmVzdGF1cmFudCIsInNvcnRTdGFuZGFyZCIsImZpbHRlcmVkUmVzdGF1cmFudCIsImxvY2FsU3RvcmFnZSIsInN0cmluZ2lmaWVkUmVzdGF1cmFudHMiLCJzZXRJdGVtIiwiQWxsUmVzdGF1cmFudExpc3QiLCJ1cGRhdGVMb2NhbFN0b3JhZ2UiLCJ0YWciLCJjbGFzc2VzIiwiY29udGVudHMiLCJhdHRyaWJ1dGUiLCJjbGFzc0xpc3QiLCJ0ZXh0Q29udGVudCIsImtleXMiLCJmb3JFYWNoIiwiYXR0cmlidXRlTmFtZSIsIl9Gb3JtSXRlbV9pbnN0YW5jZXMiLCJfRm9ybUl0ZW1fcmVhZGFibGVFbGVtZW50IiwiX0Zvcm1JdGVtX2NyZWF0ZUl0ZW0iLCJfRm9ybUl0ZW1fY3JlYXRlTGFiZWwiLCJfRm9ybUl0ZW1fY3JlYXRlU3BhbiIsImlzUmVxdWlyZWQiLCJzdWJqZWN0IiwicmVhZGFibGVFbGVtZW50SWQiLCJsYWJlbCIsImh0bWxGb3IiLCJkZXNjcmlwdGlvbiIsInJlYWRhYmxlRWxlbWVudCIsInJlcXVpcmVkIiwic3BhbiIsImFwcGVuZCIsInJlc2V0Rm9ybSIsIm9uQ2xpY2tIYW5kbGVyIiwiYnV0dG9uIiwiSFRNTEJ1dHRvbkVsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2VuZXJhdGVTZWxlY3RCb3hPcHRpb24iLCJvcHRpb24iLCJvcHRpb25FbGVtZW50IiwiaW5uZXJUZXh0IiwiaGFzRGVmYXVsdE9wdGlvbiIsInNlbGVjdEVsZW1lbnQiLCJvcHRpb25FbGVtZW50cyIsImRlZmF1bHRPcHRpb24iLCJzZWxlY3RlZCIsImRpc2FibGVkIiwiX0FkZFJlc3RhdXJhbnRGb3JtX2luc3RhbmNlcyIsIl9BZGRSZXN0YXVyYW50Rm9ybV9jYXRlZ29yeUZvcm1JdGVtIiwiX0FkZFJlc3RhdXJhbnRGb3JtX25hbWVGb3JtSXRlbSIsIl9BZGRSZXN0YXVyYW50Rm9ybV9kaXN0YW5jZUZvcm1JdGVtIiwiX0FkZFJlc3RhdXJhbnRGb3JtX2Rlc2NyaXB0aW9uRm9ybUl0ZW0iLCJfQWRkUmVzdGF1cmFudEZvcm1fbGlua0Zvcm1JdGVtIiwiX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZUNhdGVnb3J5Rm9ybUl0ZW0iLCJfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlTmFtZUZvcm1JdGVtIiwiX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZURpc3RhbmNlRm9ybUl0ZW0iLCJfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlRGVzY3JpcHRpb25Gb3JtSXRlbSIsIl9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVMaW5rRm9ybUl0ZW0iLCJfQWRkUmVzdGF1cmFudEZvcm1fY3JlYXRlQnV0dG9uRGl2IiwiX0FkZFJlc3RhdXJhbnRGb3JtX2NyZWF0ZUNhbmNlbEJ1dHRvbiIsIl9BZGRSZXN0YXVyYW50Rm9ybV9jcmVhdGVBZGRCdXR0b24iLCJjYXRlZ29yeVNlbGVjdEJveEluTW9kYWwiLCJuYW1lSW5wdXQiLCJ0eXBlIiwiRElTVEFOQ0VfU1RSSU5HUyIsIlN0cmluZyIsImRpc3RhbmNlU2VsZWN0Qm94SW5Nb2RhbCIsImRlc2NyaXB0aW9uVGV4dEFyZWEiLCJjb2xzIiwicm93cyIsImxpbmtJbnB1dCIsImhhbmRsZUNsaWNrQ2FuY2VsQnV0dG9uIiwiaGFuZGxlQ2xpY2tBZGRCdXR0b24iLCJidXR0b25EaXYiLCJhZGRCdXR0b24iLCJjYW5jZWxCdXR0b24iLCJjaGlsZHJlbiIsIm1vZGFsRGl2IiwiYmFja0Ryb3AiLCJjb250YWluZXIiLCJ0b2dnbGUiLCJnZXRUaXRsZSIsImgySW5Nb2RhbCIsImdldEZvcm0iLCJmb3JtIiwicmVzZXRGb3JtcyIsIkhUTUxFbGVtZW50IiwiY2xvc2VzdCIsIlRBQl9JRF9QUkVGSVgiLCJ0b2dnbGVGYXZvcml0ZUJ1dHRvbkltYWdlIiwiZXZlbnRUYXJnZXQiLCJjdXJyZW50SW1hZ2VTcmMiLCJnZXRBdHRyaWJ1dGUiLCJuZXdTcmMiLCJpc0Zhdm9yaXRlcyIsInJlc3RhdXJhbnROYW1lIiwiZmF2b3JpdGVCdXR0b24iLCJoYW5kbGVGYXZvcml0ZSIsImZhdm9yaXRlSW1hZ2UiLCJnZXRGYXZvcml0ZUltYWdlIiwiY2F0ZWdvcnlJbWdTcmNNYXRjaGVyIiwiY3JlYXRlQ2F0ZWdvcnlEaXYiLCJkaXYiLCJpbWciLCJjcmVhdGVOYW1lSDNUYWciLCJjcmVhdGVEaXN0YW5jZVNwYW4iLCJjcmVhdGVEZXNjcmlwdGlvblBUYWciLCJzdXBlciIsImxpbmsiLCJjYXRlZ29yeURpdiIsIm5hbWVIMyIsImRpc3RhbmNlU3BhbiIsImRlc2NyaXB0aW9uUCIsImxpbmtEaXYiLCJhVGFnIiwiaHJlZiIsImNyZWF0ZUxpbmtEaXYiLCJmYXZvcml0ZXNCdXR0b24iLCJyZXN0YXVyYW50Q29udGFpbmVyIiwicmVzdGF1cmFudExpc3QiLCJyZW5kZXJGaWx0ZXJlZENvbnRhaW5lciIsInJlc3RhdXJhbnRJbmZvRGl2IiwiY2F0ZWdvcnlBbmRGYXZvcml0ZURpdiIsImRlbGV0ZUJ1dHRvbiIsImNvbmZpcm0iLCJjbG9zZUJ1dHRvbiIsIkRldGFpbE1vZGFsQ2hpbGRyZW4iLCJfUmVzdGF1cmFudExpc3RUYWJfaW5zdGFuY2VzIiwiX1Jlc3RhdXJhbnRMaXN0VGFiX2dlbmVyYXRlVGFiTWVudSIsIl9SZXN0YXVyYW50TGlzdFRhYl9zZWN0aW9uc0ZvckFsbExpc3QiLCJfUmVzdGF1cmFudExpc3RUYWJfc2VjdGlvbnNGb3JGYXZvcml0ZUxpc3QiLCJfUmVzdGF1cmFudExpc3RUYWJfc3R5bGVkQ3VycmVudFRhYiIsIl9SZXN0YXVyYW50TGlzdFRhYl9oYW5kbGVDdXJyZW50VGFiQ2xhc3NOYW1lIiwiZmlsdGVyQ29udGFpbmVyIiwicmVzdGF1cmFudExpc3RDb250YWluZXIiLCJvbkNsaWNrSGFuZGxlIiwiY3VycmVudFRhYiIsInRhYkVsZW1lbnQiLCJ0YWJCdXR0b24iLCJjdXJyZW50VGFyZ2V0IiwiY2hpbGROb2RlcyIsInNsaWNlIiwicGFyZW50RWxlbWVudCIsImRldGFpbCIsImdldFJlc3RhdXJhbnQiLCJkZXRhaWxNb2RhbCIsImdldEVsZW1lbnRCeUlkIiwicmVwbGFjZUNoaWxkcmVuIiwidWwiLCJyZXN0YXVyYW50SXRlbXMiLCJsaSIsImluZm9EaXYiLCJjcmVhdGVJbmZvRGl2IiwiZGVmYXVsdFZhbHVlIiwiZ2V0SXRlbSIsInBhcnNlIiwib3BlbkJ1dHRvbiIsImFkZGluZ01vZGFsQ29udGFpbmVyIiwiYWRkTW9kYWwiLCJ0YWJDb250YWluZXIiLCJ0YWIiLCJ0YWJNZW51IiwiY29udGVudHNBcmVhIiwidGFiVGl0bGVzIiwidGFicyIsIm1lbnUiLCJjYXRlZ29yeVNlbGVjdEJveCIsInNvcnRTdGFuZGFyZFNlbGVjdEJveCIsInJlc3RhdXJhbnRBbGxMaXN0Q29udGFpbmVyIiwicmVzdGF1cmFudEZhdm9yaXRlTGlzdENvbnRhaW5lciIsInByZXZlbnREZWZhdWx0IiwiZmlsdGVyZWRMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==